/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

html {
  font-size: 62.5%; }

body {
  position: absolute;
  width: 100%;
  height: 100%;
  padding: 0;
  margin: 0;
  font-family: Roboto, sans-serif;
  font-size: 1.6rem;
  -webkit-touch-callout: none; }
  body * {
    -webkit-tap-highlight-color: rgba(255, 255, 255, 0); }

a, abbr, address, article, aside, audio, b, blockquote, body, caption, cite,
code, dd, del, dfn, dialog, div, dl, dt, em, fieldset, figure, footer, form, h1,
h2, h3, h4, h5, h6, header, hgroup, hr, html, i, iframe, img, ins, kbd, label,
legend, li, mark, menu, nav, object, ol, p, pre, q, samp, section, small, span,
strong, sub, sup, table, tbody, td, tfoot, th, thead, time, tr, ul, var, video {
  padding: 0;
  margin: 0;
  border: 0;
  outline: 0; }

*, *:before, *:after {
  box-sizing: border-box;
  padding: 0;
  margin: 0; }

h1, h2, h3, h4, h5, h6, label, p, button, abbr, a, span, small {
  font-smoothing: antialiased;
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
          text-size-adjust: 100%; }

a {
  text-decoration: none;
  -webkit-tap-highlight-color: transparent; }

input:not([type="checkbox"]):not([type="radio"]), button {
  outline: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: rgba(255, 255, 255, 0); }

h1 small, h2 small, h3 small, h4 small, h5 small, h6 small {
  font-family: "Roboto", "Helvetica", "Arial", sans-serif;
  font-size: 5.6rem;
  font-weight: 400;
  line-height: 1.35;
  letter-spacing: -.02em;
  opacity: .54; }

h1 {
  font-family: "Roboto", "Helvetica", "Arial", sans-serif;
  font-size: 5.6rem;
  font-weight: 400;
  line-height: 1.35;
  letter-spacing: -.02em; }

h2 {
  font-family: "Roboto", "Helvetica", "Arial", sans-serif;
  font-size: 4.5rem;
  font-weight: 400;
  line-height: 4.8rem; }

h3 {
  font-family: "Roboto", "Helvetica", "Arial", sans-serif;
  font-size: 3.4rem;
  font-weight: 400;
  line-height: 4rem; }

h4 {
  font-family: "Roboto", "Helvetica", "Arial", sans-serif;
  font-size: 2.4rem;
  font-weight: 400;
  line-height: 3.2rem;
  -moz-osx-font-smoothing: grayscale; }

h5 {
  font-family: "Roboto", "Helvetica", "Arial", sans-serif;
  font-size: 2rem;
  font-weight: 500;
  line-height: 1;
  letter-spacing: .02em; }

h6 {
  font-family: "Roboto", "Helvetica", "Arial", sans-serif;
  font-size: 1.6rem;
  font-weight: 400;
  line-height: 2.4rem;
  letter-spacing: .04em; }

p {
  font-size: 1.4rem;
  font-weight: 400;
  line-height: 2.4rem;
  letter-spacing: 0; }
.style__root___2LQf5 {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  height: 6.4rem;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 0 2.4rem;
  color: white;
  background: #303f9f; }
  .style__root___2LQf5:not(.style__flat___2vrZq) {
    z-index: 100;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.26); }
  .style__root___2LQf5.style__fixed___298lp {
    position: fixed;
    top: 0;
    right: 0;
    left: 0;
    z-index: 300; }
  .style__root___2LQf5 a {
    color: white; }
.style__horizontal___-9-n2 > [data-react-toolbox="button"], .style__horizontal___-9-n2 > [data-react-toolbox="link"] {
  display: inline-block;
  margin: 0 0.5rem; }

.style__vertical___WdN9r > [data-react-toolbox="button"], .style__vertical___WdN9r > [data-react-toolbox="link"] {
  display: block;
  margin: 0.5rem; }

.style__vertical___WdN9r, .style__horizontal___-9-n2 {
  padding: 0.5rem; }
  .style__vertical___WdN9r > [data-react-toolbox="link"], .style__horizontal___-9-n2 > [data-react-toolbox="link"] {
    color: black; }
.style__normal___3FU2A {
  position: absolute;
  top: 50%;
  left: 50%;
  z-index: 100;
  pointer-events: none;
  background-color: currentColor;
  border-radius: 50%;
  -webkit-transform-origin: 50% 50%;
          transform-origin: 50% 50%; }

.style__wrapper___3T4w7 {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1;
  pointer-events: none; }

.style__normal___3FU2A {
  -webkit-transition-duration: 800ms;
          transition-duration: 800ms; }
  .style__normal___3FU2A.style__restarting___281Iq {
    opacity: 0.3;
    -webkit-transition-property: none;
    transition-property: none; }
  .style__normal___3FU2A.style__active___2TJk0 {
    opacity: 0.3;
    -webkit-transition-property: -webkit-transform;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform; }
  .style__normal___3FU2A:not(.style__active___2TJk0):not(.style__restarting___281Iq) {
    opacity: 0;
    -webkit-transition-property: opacity, -webkit-transform;
    transition-property: opacity, -webkit-transform;
    transition-property: opacity, transform;
    transition-property: opacity, transform, -webkit-transform; }
.style__raised___1YO8U, .style__flat___2UJfS, .style__floating___17YiZ, .style__toggle___2n01i {
  font-family: "Roboto", "Helvetica", "Arial", sans-serif;
  font-size: 1.4rem;
  font-weight: 500;
  line-height: 1;
  text-transform: uppercase;
  letter-spacing: 0;
  position: relative;
  display: inline-block;
  height: 3.6rem;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -ms-flex-line-pack: center;
      align-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
              -ms-grid-row-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  text-align: center;
  text-decoration: none;
  white-space: nowrap;
  cursor: pointer;
  border: 0;
  outline: none;
  -webkit-transition: box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  transition: box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s cubic-bezier(0.4, 0, 0.2, 1); }
  .style__raised___1YO8U::-moz-focus-inner, .style__flat___2UJfS::-moz-focus-inner, .style__floating___17YiZ::-moz-focus-inner, .style__toggle___2n01i::-moz-focus-inner {
    border: 0; }
  .style__raised___1YO8U > span:not([data-react-toolbox="tooltip"]), .style__flat___2UJfS > span:not([data-react-toolbox="tooltip"]), .style__floating___17YiZ > span:not([data-react-toolbox="tooltip"]), .style__toggle___2n01i > span:not([data-react-toolbox="tooltip"]) {
    display: inline-block;
    line-height: 3.6rem;
    vertical-align: middle; }
  .style__raised___1YO8U > svg, .style__flat___2UJfS > svg, .style__floating___17YiZ > svg, .style__toggle___2n01i > svg {
    display: inline-block;
    width: 1em;
    height: 3.6rem;
    font-size: 120%;
    vertical-align: middle;
    fill: currentColor; }
  .style__raised___1YO8U > *, .style__flat___2UJfS > *, .style__floating___17YiZ > *, .style__toggle___2n01i > * {
    pointer-events: none; }
  .style__raised___1YO8U [data-react-toolbox="ripple"], .style__flat___2UJfS [data-react-toolbox="ripple"], .style__floating___17YiZ [data-react-toolbox="ripple"], .style__toggle___2n01i [data-react-toolbox="ripple"] {
    overflow: hidden; }
  [disabled].style__raised___1YO8U, [disabled].style__flat___2UJfS, [disabled].style__floating___17YiZ, [disabled].style__toggle___2n01i {
    color: rgba(0, 0, 0, 0.26);
    pointer-events: none;
    cursor: auto; }

.style__raised___1YO8U, .style__flat___2UJfS {
  min-width: 9rem;
  padding: 0 1.2rem;
  border-radius: 0.2rem; }
  .style__raised___1YO8U .style__icon___2GNOS, .style__flat___2UJfS .style__icon___2GNOS {
    margin-right: 0.6rem;
    font-size: 120%;
    vertical-align: middle; }
  .style__raised___1YO8U > svg, .style__flat___2UJfS > svg {
    margin-right: 0.5rem; }

[disabled].style__raised___1YO8U, [disabled].style__floating___17YiZ {
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
  background-color: rgba(0, 0, 0, 0.12); }

.style__raised___1YO8U:active, .style__floating___17YiZ:active {
  box-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.2); }

.style__raised___1YO8U:focus:not(:active), .style__floating___17YiZ:focus:not(:active) {
  box-shadow: 0 0 8px rgba(0, 0, 0, 0.18), 0 8px 16px rgba(0, 0, 0, 0.36); }

.style__raised___1YO8U {
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12); }

.style__flat___2UJfS {
  background: transparent; }

.style__floating___17YiZ {
  width: 5.6rem;
  height: 5.6rem;
  font-size: 2.4rem;
  border-radius: 50%;
  box-shadow: 0 1px 1.5px 0 rgba(0, 0, 0, 0.12), 0 1px 1px 0 rgba(0, 0, 0, 0.24); }
  .style__floating___17YiZ .style__icon___2GNOS {
    line-height: 5.6rem; }
  .style__floating___17YiZ [data-react-toolbox="ripple"] {
    border-radius: 50%; }
  .style__floating___17YiZ.style__mini___JjRxL {
    width: 4rem;
    height: 4rem;
    font-size: 1.77778rem; }
    .style__floating___17YiZ.style__mini___JjRxL .style__icon___2GNOS {
      line-height: 4rem; }

.style__toggle___2n01i {
  width: 3.6rem;
  background: transparent;
  border-radius: 50%; }
  .style__toggle___2n01i > .style__icon___2GNOS, .style__toggle___2n01i svg {
    font-size: 2rem;
    line-height: 3.6rem;
    vertical-align: middle; }
  .style__toggle___2n01i [data-react-toolbox="ripple"] {
    border-radius: 50%; }

.style__neutral___iXLge:not([disabled]).style__raised___1YO8U, .style__neutral___iXLge:not([disabled]).style__floating___17YiZ {
  color: #212121;
  background-color: white; }

.style__neutral___iXLge:not([disabled]).style__flat___2UJfS, .style__neutral___iXLge:not([disabled]).style__toggle___2n01i {
  color: #212121; }
  .style__neutral___iXLge:not([disabled]).style__flat___2UJfS:focus:not(:active), .style__neutral___iXLge:not([disabled]).style__toggle___2n01i:focus:not(:active) {
    background: rgba(33, 33, 33, 0.2); }

.style__neutral___iXLge:not([disabled]).style__flat___2UJfS:hover {
  background: rgba(33, 33, 33, 0.2); }

.style__neutral___iXLge:not([disabled]).style__inverse___2NYEz.style__raised___1YO8U, .style__neutral___iXLge:not([disabled]).style__inverse___2NYEz.style__floating___17YiZ {
  color: white;
  background-color: #212121; }

.style__neutral___iXLge:not([disabled]).style__inverse___2NYEz.style__flat___2UJfS, .style__neutral___iXLge:not([disabled]).style__inverse___2NYEz.style__toggle___2n01i {
  color: white; }
  .style__neutral___iXLge:not([disabled]).style__inverse___2NYEz.style__flat___2UJfS:focus:not(:active), .style__neutral___iXLge:not([disabled]).style__inverse___2NYEz.style__toggle___2n01i:focus:not(:active) {
    background: rgba(33, 33, 33, 0.2); }

.style__neutral___iXLge:not([disabled]).style__inverse___2NYEz.style__flat___2UJfS:hover {
  background: rgba(33, 33, 33, 0.2); }

.style__primary___2QrZv:not([disabled]).style__raised___1YO8U, .style__primary___2QrZv:not([disabled]).style__floating___17YiZ {
  color: white;
  background: #3f51b5; }

.style__primary___2QrZv:not([disabled]).style__flat___2UJfS, .style__primary___2QrZv:not([disabled]).style__toggle___2n01i {
  color: #3f51b5; }
  .style__primary___2QrZv:not([disabled]).style__flat___2UJfS:focus:not(:active), .style__primary___2QrZv:not([disabled]).style__toggle___2n01i:focus:not(:active) {
    background: rgba(63, 81, 181, 0.2); }

.style__primary___2QrZv:not([disabled]).style__flat___2UJfS:hover {
  background: rgba(63, 81, 181, 0.2); }

.style__accent___3EOvj:not([disabled]).style__raised___1YO8U, .style__accent___3EOvj:not([disabled]).style__floating___17YiZ {
  color: white;
  background: #ff4081; }

.style__accent___3EOvj:not([disabled]).style__flat___2UJfS, .style__accent___3EOvj:not([disabled]).style__toggle___2n01i {
  color: #ff4081; }
  .style__accent___3EOvj:not([disabled]).style__flat___2UJfS:focus:not(:active), .style__accent___3EOvj:not([disabled]).style__toggle___2n01i:focus:not(:active) {
    background: rgba(255, 64, 129, 0.2); }

.style__accent___3EOvj:not([disabled]).style__flat___2UJfS:hover {
  background: rgba(255, 64, 129, 0.2); }
.style__icon___3I4KU {
  margin-right: 1rem;
  font-size: 1.8rem; }

.style__root___3pN6l {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -ms-flex-line-pack: center;
      align-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  line-height: 1.5;
  cursor: pointer;
  -webkit-transition: opacity 0.35s cubic-bezier(0.4, 0, 0.2, 1);
  transition: opacity 0.35s cubic-bezier(0.4, 0, 0.2, 1); }
  .style__root___3pN6l:not(.style__active___1Faiq) {
    opacity: .5; }
  .style__root___3pN6l:hover, .style__root___3pN6l:active {
    opacity: 1; }
  .style__root___3pN6l > * {
    vertical-align: middle; }
  .style__root___3pN6l > abbr {
    text-transform: capitalize; }
  .style__root___3pN6l > small {
    margin-left: 0.8rem;
    font-size: 1.2rem;
    text-align: center; }
.style__appbar___EpsvT > .style__title___3Ym85 {
  font-size: 1.8rem;
  font-weight: 700;
  position: relative; }
  .style__appbar___EpsvT > .style__title___3Ym85 > small {
    font-size: 1.8rem;
    font-weight: normal; }

.style__appbar___EpsvT > .style__button___393-E {
  position: absolute;
  top: 3.6rem;
  right: 2.8rem;
  z-index: 200; }

.style__content___su9kv {
  padding: 1rem; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjazovLy9+L25vcm1hbGl6ZS5jc3Mvbm9ybWFsaXplLmNzcyIsIndlYnBhY2s6Ly8vd2VicGFjazovLy9zdHlsZS5zY3NzIiwid2VicGFjazovLy93ZWJwYWNrOi8vL34vcmVhY3QtdG9vbGJveC9saWIvY29tbW9ucy5zY3NzIiwid2VicGFjazovLy93ZWJwYWNrOi8vL34vcmVhY3QtdG9vbGJveC9saWIvX21peGlucy5zY3NzIiwid2VicGFjazovLy93ZWJwYWNrOi8vL34vcmVhY3QtdG9vbGJveC9saWIvX2dsb2JhbHMuc2NzcyIsIndlYnBhY2s6Ly8vd2VicGFjazovLy9+L3JlYWN0LXRvb2xib3gvbGliL34vcmVhY3QtdG9vbGJveC9saWIvYXBwX2Jhci9zdHlsZS5zY3NzIiwid2VicGFjazovLy93ZWJwYWNrOi8vL34vcmVhY3QtdG9vbGJveC9saWIvfi9yZWFjdC10b29sYm94L2xpYi9hcHBfYmFyL19jb25maWcuc2NzcyIsIndlYnBhY2s6Ly8vd2VicGFjazovLy9+L3JlYWN0LXRvb2xib3gvbGliL34vcmVhY3QtdG9vbGJveC9saWIvX2NvbG9ycy5zY3NzIiwid2VicGFjazovLy93ZWJwYWNrOi8vL34vcmVhY3QtdG9vbGJveC9saWIvfi9yZWFjdC10b29sYm94L2xpYi9fZ2xvYmFscy5zY3NzIiwid2VicGFjazovLy93ZWJwYWNrOi8vL34vcmVhY3QtdG9vbGJveC9saWIvfi9yZWFjdC10b29sYm94L2xpYi9uYXZpZ2F0aW9uL3N0eWxlLnNjc3MiLCJ3ZWJwYWNrOi8vL3dlYnBhY2s6Ly8vfi9yZWFjdC10b29sYm94L2xpYi9+L3JlYWN0LXRvb2xib3gvbGliL3JpcHBsZS9zdHlsZS5zY3NzIiwid2VicGFjazovLy93ZWJwYWNrOi8vL34vcmVhY3QtdG9vbGJveC9saWIvfi9yZWFjdC10b29sYm94L2xpYi9yaXBwbGUvX2NvbmZpZy5zY3NzIiwid2VicGFjazovLy93ZWJwYWNrOi8vL34vcmVhY3QtdG9vbGJveC9saWIvfi9yZWFjdC10b29sYm94L2xpYi9idXR0b24vc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly8vd2VicGFjazovLy9+L3JlYWN0LXRvb2xib3gvbGliL34vcmVhY3QtdG9vbGJveC9saWIvX21peGlucy5zY3NzIiwid2VicGFjazovLy93ZWJwYWNrOi8vL34vcmVhY3QtdG9vbGJveC9saWIvfi9yZWFjdC10b29sYm94L2xpYi9idXR0b24vX2NvbmZpZy5zY3NzIiwid2VicGFjazovLy93ZWJwYWNrOi8vL34vcmVhY3QtdG9vbGJveC9saWIvYnV0dG9uL3N0eWxlLnNjc3MiLCJ3ZWJwYWNrOi8vL3dlYnBhY2s6Ly8vfi9yZWFjdC10b29sYm94L2xpYi9+L3JlYWN0LXRvb2xib3gvbGliL2xpbmsvc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly8vd2VicGFjazovLy9qcy9qcy9jb21wb25lbnRzL3N0eWxlLnNjc3MiLCJ3ZWJwYWNrOi8vL3dlYnBhY2s6Ly8vanMvfi9yZWFjdC10b29sYm94L2xpYi9fZ2xvYmFscy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDRFQUE0RTtBQUU1RTs7O0dBR0c7QUFFSDtFQUNFLHdCQUF3QjtFQUFFLE9BQU87RUFDakMsMkJBQTJCO0VBQUUsT0FBTztFQUNwQywrQkFBK0I7RUFBRSxPQUFPLEVBQ3pDOztBQUVEOztHQUVHO0FBRUg7RUFDRSxVQUFVLEVBQ1g7O0FBRUQ7Z0ZBQ2dGO0FBRWhGOzs7O0dBSUc7QUFFSDs7Ozs7Ozs7Ozs7O0VBV1UsT0FBTztFQUNmLGVBQWUsRUFDaEI7O0FBRUQ7O0dBRUc7QUFFSDs7OztFQUlFLHNCQUFzQixFQUN2Qjs7QUFFRDs7R0FFRztBQUVIO0VBQ0UsY0FBYztFQUNkLFVBQVUsRUFDWDs7QUFFRDs7R0FFRztBQUVIO0VBQ0UseUJBQXlCLEVBQzFCOztBQUVEOzs7R0FHRztBQUVIOztFQUVFLGNBQWMsRUFDZjs7QUFFRDtnRkFDZ0Y7QUFFaEY7OztHQUdHO0FBRUg7RUFDRSw4QkFBOEI7RUFBRSxPQUFPO0VBQ3ZDLHNDQUFz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ZCwrQkFBb0I7RUFBcEIsOEJBQW9CO01BQXBCLHdCQUFvQjtVQUFwQixvQkFBb0I7RUFDcEIsMkJBQXNCO01BQXRCLHNCQUFzQjtFQUN0QiwwQkFBb0I7TUFBcEIsdUJBQW9CO1VBQXBCLG9CQUFvQjtFQUNwQix5QkFBd0I7TUFBeEIsc0JBQXdCO1VBQXhCLHdCQUF3QjtFQUN4QixpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLCtEUmtCNkM7RVFsQjdDLHVEUmtCNkMsRVFBOUM7RUEzQkQ7SUFXSSxZQUFZLEVBQ2I7RUFaSDtJQWNJLFdBQVcsRUFDWjtFQWZIO0lBaUJJLHVCQUF1QixFQUN4QjtFQWxCSDtJQW9CSSwyQkFBMkIsRUFDNUI7RUFyQkg7SUF1Qkksb0JBQWU7SUFDZixrQlJyQmdCO0lRc0JoQixtQkFBbUIsRUFDcEI7QUN4Qkg7RUFFSSxrQkFSaUI7RUFTakIsaUJDS2tCO0VESmxCLG1CQUFtQixFQUtwQjtFQVRIO0lBTU0sa0JBQWM7SUFDZCxvQkFBb0IsRUFDckI7O0FBUkw7RUFZSSxtQkFBbUI7RUFDbkIsWUFBbUI7RUFDbkIsY0FBOEI7RUFDOUIsYUNpQmdCLEVEaEJqQjs7QUFJSDtFQUNFLGNDekJTLEVEMEJWIiwiZmlsZSI6InJlYWN0LXRvb2xib3guY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIG5vcm1hbGl6ZS5jc3MgdjQuMS4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gSUUgYW5kIGlPUy5cbiAqL1xuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsIC8qIDEgKi9cbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLCAvKiAyICovXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkgeyAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5cbnRlbXBsYXRlLCAvKiAxICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgaGVpZ2h0OiAwOyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvbnQgd2VpZ2h0IHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiB3ZWJwYWNrOi8vL34vbm9ybWFsaXplLmNzcy9ub3JtYWxpemUuY3NzXG4gKiovIiwiLyohIG5vcm1hbGl6ZS5jc3MgdjQuMS4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIElFIGFuZCBpT1MuXG4gKi9cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xudGVtcGxhdGUsXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmUtd2lkdGg6IDA7IH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi8gfVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG9wYWNpdHk6IDAuNTQ7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqLyB9XG5cbmh0bWwge1xuICBmb250LXNpemU6IDYyLjUlOyB9XG5cbmJvZHkge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1mYW1pbHk6IFJvYm90bywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTsgfVxuICBib2R5ICoge1xuICAgIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwKTsgfVxuXG5hLCBhYmJyLCBhZGRyZXNzLCBhcnRpY2xlLCBhc2lkZSwgYXVkaW8sIGIsIGJsb2NrcXVvdGUsIGJvZHksIGNhcHRpb24sIGNpdGUsXG5jb2RlLCBkZCwgZGVsLCBkZm4sIGRpYWxvZywgZGl2LCBkbCwgZHQsIGVtLCBmaWVsZHNldCwgZmlndXJlLCBmb290ZXIsIGZvcm0sIGgxLFxuaDIsIGgzLCBoNCwgaDUsIGg2LCBoZWFkZXIsIGhncm91cCwgaHIsIGh0bWwsIGksIGlmcmFtZSwgaW1nLCBpbnMsIGtiZCwgbGFiZWwsXG5sZWdlbmQsIGxpLCBtYXJrLCBtZW51LCBuYXYsIG9iamVjdCwgb2wsIHAsIHByZSwgcSwgc2FtcCwgc2VjdGlvbiwgc21hbGwsIHNwYW4sXG5zdHJvbmcsIHN1Yiwgc3VwLCB0YWJsZSwgdGJvZHksIHRkLCB0Zm9vdCwgdGgsIHRoZWFkLCB0aW1lLCB0ciwgdWwsIHZhciwgdmlkZW8ge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogMDtcbiAgb3V0bGluZTogMDsgfVxuXG4qLCAqOmJlZm9yZSwgKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDsgfVxuXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBsYWJlbCwgcCwgYnV0dG9uLCBhYmJyLCBhLCBzcGFuLCBzbWFsbCB7XG4gIGZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIHRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IH1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuXG5pbnB1dDpub3QoW3R5cGU9XCJjaGVja2JveFwiXSk6bm90KFt0eXBlPVwicmFkaW9cIl0pLCBidXR0b24ge1xuICBvdXRsaW5lOiBub25lO1xuICBhcHBlYXJhbmNlOiBub25lO1xuICAtd2Via2l0LXRvdWNoLWNhbGxvdXQ6IG5vbmU7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwKTsgfVxuXG5oMSBzbWFsbCwgaDIgc21hbGwsIGgzIHNtYWxsLCBoNCBzbWFsbCwgaDUgc21hbGwsIGg2IHNtYWxsIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhXCIsIFwiQXJpYWxcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiA1LjZyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjM1O1xuICBsZXR0ZXItc3BhY2luZzogLS4wMmVtO1xuICBvcGFjaXR5OiAuNTQ7IH1cblxuaDEge1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2FcIiwgXCJBcmlhbFwiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDUuNnJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMzU7XG4gIGxldHRlci1zcGFjaW5nOiAtLjAyZW07IH1cblxuaDIge1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2FcIiwgXCJBcmlhbFwiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDQuNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDQuOHJlbTsgfVxuXG5oMyB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiLCBcIkhlbHZldGljYVwiLCBcIkFyaWFsXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMy40cmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogNHJlbTsgfVxuXG5oNCB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiLCBcIkhlbHZldGljYVwiLCBcIkFyaWFsXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMi40cmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMy4ycmVtO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlOyB9XG5cbmg1IHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhXCIsIFwiQXJpYWxcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAycmVtO1xuICBmb250LXdlaWdodDogNTAwO1xuICBsaW5lLWhlaWdodDogMTtcbiAgbGV0dGVyLXNwYWNpbmc6IC4wMmVtOyB9XG5cbmg2IHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhXCIsIFwiQXJpYWxcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAyLjRyZW07XG4gIGxldHRlci1zcGFjaW5nOiAuMDRlbTsgfVxuXG5wIHtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAyLjRyZW07XG4gIGxldHRlci1zcGFjaW5nOiAwOyB9XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiB3ZWJwYWNrOi8vL3N0eWxlLnNjc3NcbiAqKi8iLCJAaW1wb3J0IFwiLi9iYXNlXCI7XG5AaW1wb3J0IFwifm5vcm1hbGl6ZS5jc3NcIjtcblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogNjIuNSU7XG59XG5cbmJvZHkge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1mYW1pbHk6IFJvYm90bywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTtcbiAgKiB7XG4gICAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDApO1xuICB9XG59XG5cbmEsIGFiYnIsIGFkZHJlc3MsIGFydGljbGUsIGFzaWRlLCBhdWRpbywgYiwgYmxvY2txdW90ZSwgYm9keSwgY2FwdGlvbiwgY2l0ZSxcbmNvZGUsIGRkLCBkZWwsIGRmbiwgZGlhbG9nLCBkaXYsIGRsLCBkdCwgZW0sIGZpZWxkc2V0LCBmaWd1cmUsIGZvb3RlciwgZm9ybSwgaDEsXG5oMiwgaDMsIGg0LCBoNSwgaDYsIGhlYWRlciwgaGdyb3VwLCBociwgaHRtbCwgaSwgaWZyYW1lLCBpbWcsIGlucywga2JkLCBsYWJlbCxcbmxlZ2VuZCwgbGksIG1hcmssIG1lbnUsIG5hdiwgb2JqZWN0LCBvbCwgcCwgcHJlLCBxLCBzYW1wLCBzZWN0aW9uLCBzbWFsbCwgc3BhbixcbnN0cm9uZywgc3ViLCBzdXAsIHRhYmxlLCB0Ym9keSwgdGQsIHRmb290LCB0aCwgdGhlYWQsIHRpbWUsIHRyLCB1bCwgdmFyLCB2aWRlbyB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgYm9yZGVyOiAwO1xuICBvdXRsaW5lOiAwO1xufVxuXG4qLCAqOmJlZm9yZSwgKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgbGFiZWwsIHAsIGJ1dHRvbiwgYWJiciwgYSwgc3Bhbiwgc21hbGwge1xuICBmb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICB0ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG59XG5cbmlucHV0Om5vdChbdHlwZT1cImNoZWNrYm94XCJdKTpub3QoW3R5cGU9XCJyYWRpb1wiXSksIGJ1dHRvbiB7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDApO1xufVxuXG4vLyAtLSBNYXRlcmlhbCBkZXNpZ24gZm9udCBzaXplc1xuaDEgc21hbGwsIGgyIHNtYWxsLCBoMyBzbWFsbCwgaDQgc21hbGwsIGg1IHNtYWxsLCBoNiBzbWFsbCB7XG4gIEBpbmNsdWRlIHR5cG8tZGlzcGxheS0zKCRjb2xvci1jb250cmFzdDogdHJ1ZSk7XG59XG5cbmgxIHtcbiAgQGluY2x1ZGUgdHlwby1kaXNwbGF5LTM7XG59XG5cbmgyIHtcbiAgQGluY2x1ZGUgdHlwby1kaXNwbGF5LTI7XG59XG5cbmgzIHtcbiAgQGluY2x1ZGUgdHlwby1kaXNwbGF5LTE7XG59XG5cbmg0IHtcbiAgQGluY2x1ZGUgdHlwby1oZWFkbGluZTtcbn1cblxuaDUge1xuICBAaW5jbHVkZSB0eXBvLXRpdGxlO1xufVxuXG5oNiB7XG4gIEBpbmNsdWRlIHR5cG8tc3ViaGVhZDtcbn1cblxucCB7XG4gIEBpbmNsdWRlIHR5cG8tYm9keS0xO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogd2VicGFjazovLy9+L3JlYWN0LXRvb2xib3gvbGliL2NvbW1vbnMuc2Nzc1xuICoqLyIsIi8vIHNjc3MtbGludDpkaXNhYmxlIFZlbmRvclByZWZpeFxuQG1peGluIHR5cG8tcHJlZmVycmVkLWZvbnQoJHVzZS1wcmVmZXJyZWQ6IHRydWUpIHtcbiAgQGlmICR1c2UtcHJlZmVycmVkIHtcbiAgICBmb250LWZhbWlseTogJHByZWZlcnJlZC1mb250O1xuICB9XG59XG5cbkBtaXhpbiB0eXBvLWRpc3BsYXktNCgkY29sb3ItY29udHJhc3Q6IGZhbHNlLCAkdXNlLXByZWZlcnJlZDogdHJ1ZSkge1xuICBAaW5jbHVkZSB0eXBvLXByZWZlcnJlZC1mb250KCR1c2UtcHJlZmVycmVkKTtcbiAgZm9udC1zaXplOiAxMS4ycmVtO1xuICBmb250LXdlaWdodDogMzAwO1xuICBsaW5lLWhlaWdodDogMTtcbiAgbGV0dGVyLXNwYWNpbmc6IC0uMDRlbTtcblxuICBAaWYgJGNvbG9yLWNvbnRyYXN0IHtcbiAgICBvcGFjaXR5OiAuNTQ7XG4gIH1cbn1cblxuQG1peGluIHR5cG8tZGlzcGxheS0zKCRjb2xvci1jb250cmFzdDogZmFsc2UsICR1c2UtcHJlZmVycmVkOiB0cnVlKSB7XG4gIEBpbmNsdWRlIHR5cG8tcHJlZmVycmVkLWZvbnQoJHVzZS1wcmVmZXJyZWQpO1xuICBmb250LXNpemU6IDUuNnJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMzU7XG4gIGxldHRlci1zcGFjaW5nOiAtLjAyZW07XG5cbiAgQGlmICRjb2xvci1jb250cmFzdCB7XG4gICAgb3BhY2l0eTogLjU0O1xuICB9XG59XG5cbkBtaXhpbiB0eXBvLWRpc3BsYXktMigkY29sb3ItY29udHJhc3Q6IGZhbHNlLCAkdXNlLXByZWZlcnJlZDogdHJ1ZSkge1xuICBAaW5jbHVkZSB0eXBvLXByZWZlcnJlZC1mb250KCR1c2UtcHJlZmVycmVkKTtcbiAgZm9udC1zaXplOiA0LjVyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiA0LjhyZW07XG5cbiAgQGlmICRjb2xvci1jb250cmFzdCB7XG4gICAgb3BhY2l0eTogLjU0O1xuICB9XG59XG5cbkBtaXhpbiB0eXBvLWRpc3BsYXktMSgkY29sb3ItY29udHJhc3Q6IGZhbHNlLCAkdXNlLXByZWZlcnJlZDogdHJ1ZSkge1xuICBAaW5jbHVkZSB0eXBvLXByZWZlcnJlZC1mb250KCR1c2UtcHJlZmVycmVkKTtcbiAgZm9udC1zaXplOiAzLjRyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiA0cmVtO1xuXG4gIEBpZiAkY29sb3ItY29udHJhc3Qge1xuICAgIG9wYWNpdHk6IC41NDtcbiAgfVxufVxuXG5AbWl4aW4gdHlwby1oZWFkbGluZSgkY29sb3ItY29udHJhc3Q6IGZhbHNlLCAkdXNlLXByZWZlcnJlZDogdHJ1ZSkge1xuICBAaW5jbHVkZSB0eXBvLXByZWZlcnJlZC1mb250KCR1c2UtcHJlZmVycmVkKTtcbiAgZm9udC1zaXplOiAyLjRyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAzLjJyZW07XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG5cbiAgQGlmICRjb2xvci1jb250cmFzdCB7XG4gICAgb3BhY2l0eTogLjg3O1xuICB9XG59XG5cbkBtaXhpbiB0eXBvLXRpdGxlKCRjb2xvci1jb250cmFzdDogZmFsc2UsICR1c2UtcHJlZmVycmVkOiB0cnVlKSB7XG4gIEBpbmNsdWRlIHR5cG8tcHJlZmVycmVkLWZvbnQoJHVzZS1wcmVmZXJyZWQpO1xuICBmb250LXNpemU6IDJyZW07XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBsZXR0ZXItc3BhY2luZzogLjAyZW07XG5cbiAgQGlmICRjb2xvci1jb250cmFzdCB7XG4gICAgb3BhY2l0eTogLjg3O1xuICB9XG59XG5cbkBtaXhpbiB0eXBvLXN1YmhlYWQoJGNvbG9yLWNvbnRyYXN0OiBmYWxzZSwgJHVzZS1wcmVmZXJyZWQ6IHRydWUpIHtcbiAgQGluY2x1ZGUgdHlwby1wcmVmZXJyZWQtZm9udCgkdXNlLXByZWZlcnJlZCk7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMi40cmVtO1xuICBsZXR0ZXItc3BhY2luZzogLjA0ZW07XG5cbiAgQGlmICRjb2xvci1jb250cmFzdCB7XG4gICAgb3BhY2l0eTogLjg3O1xuICB9XG59XG5cbkBtaXhpbiB0eXBvLXN1YmhlYWQtMigkY29sb3ItY29udHJhc3Q6IGZhbHNlLCAkdXNlLXByZWZlcnJlZDogdHJ1ZSkge1xuICBAaW5jbHVkZSB0eXBvLXByZWZlcnJlZC1mb250KCR1c2UtcHJlZmVycmVkKTtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAyLjhyZW07XG4gIGxldHRlci1zcGFjaW5nOiAuMDRlbTtcblxuICBAaWYgJGNvbG9yLWNvbnRyYXN0IHtcbiAgICBvcGFjaXR5OiAuODc7XG4gIH1cbn1cblxuQG1peGluIHR5cG8tYm9keS0yKCRjb2xvci1jb250cmFzdDogZmFsc2UsICR1c2UtcHJlZmVycmVkOiBmYWxzZSkge1xuICBAaW5jbHVkZSB0eXBvLXByZWZlcnJlZC1mb250KCR1c2UtcHJlZmVycmVkKTtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIGxpbmUtaGVpZ2h0OiAyLjRyZW07XG4gIGxldHRlci1zcGFjaW5nOiAwO1xuXG4gIEBpZiAkdXNlLXByZWZlcnJlZCB7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgfSBAZWxzZSB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cblxuICBAaWYgJGNvbG9yLWNvbnRyYXN0IHtcbiAgICBvcGFjaXR5OiAuODc7XG4gIH1cbn1cblxuQG1peGluIHR5cG8tYm9keS0xKCRjb2xvci1jb250cmFzdDogZmFsc2UsICR1c2UtcHJlZmVycmVkOiBmYWxzZSkge1xuICBAaW5jbHVkZSB0eXBvLXByZWZlcnJlZC1mb250KCR1c2UtcHJlZmVycmVkKTtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAyLjRyZW07XG4gIGxldHRlci1zcGFjaW5nOiAwO1xuXG4gIEBpZiAkY29sb3ItY29udHJhc3Qge1xuICAgIG9wYWNpdHk6IC44NztcbiAgfVxufVxuXG5AbWl4aW4gdHlwby1jYXB0aW9uKCRjb2xvci1jb250cmFzdDogZmFsc2UsICR1c2UtcHJlZmVycmVkOiBmYWxzZSkge1xuICBAaW5jbHVkZSB0eXBvLXByZWZlcnJlZC1mb250KCR1c2UtcHJlZmVycmVkKTtcbiAgZm9udC1zaXplOiAxLjJyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBsZXR0ZXItc3BhY2luZzogMDtcblxuICBAaWYgJGNvbG9yLWNvbnRyYXN0IHtcbiAgICBvcGFjaXR5OiAuNTQ7XG4gIH1cbn1cblxuQG1peGluIHR5cG8tYmxvY2txdW90ZSgkY29sb3ItY29udHJhc3Q6IGZhbHNlLCAkdXNlLXByZWZlcnJlZDogdHJ1ZSkge1xuICBAaW5jbHVkZSB0eXBvLXByZWZlcnJlZC1mb250KCR1c2UtcHJlZmVycmVkKTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXNpemU6IDIuNHJlbTtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBmb250LXdlaWdodDogMzAwO1xuICBsaW5lLWhlaWdodDogMS4zNTtcbiAgbGV0dGVyLXNwYWNpbmc6IC4wOGVtO1xuXG4gICY6YmVmb3JlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogLS41ZW07XG4gICAgY29udGVudDogXCLigJxcIjtcbiAgfVxuXG4gICY6YWZ0ZXIge1xuICAgIG1hcmdpbi1sZWZ0OiAtLjA1ZW07XG4gICAgY29udGVudDogXCLigJ1cIjtcbiAgfVxuXG4gIEBpZiAkY29sb3ItY29udHJhc3Qge1xuICAgIG9wYWNpdHk6IC41NDtcbiAgfVxufVxuXG5AbWl4aW4gdHlwby1tZW51KCRjb2xvci1jb250cmFzdDogZmFsc2UsICR1c2UtcHJlZmVycmVkOiB0cnVlKSB7XG4gIEBpbmNsdWRlIHR5cG8tcHJlZmVycmVkLWZvbnQoJHVzZS1wcmVmZXJyZWQpO1xuICBmb250LXNpemU6IDEuNHJlbTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIGxldHRlci1zcGFjaW5nOiAwO1xuXG4gIEBpZiAkY29sb3ItY29udHJhc3Qge1xuICAgIG9wYWNpdHk6IC44NztcbiAgfVxufVxuXG5AbWl4aW4gdHlwby1idXR0b24oJGNvbG9yLWNvbnRyYXN0OiBmYWxzZSwgJHVzZS1wcmVmZXJyZWQ6IHRydWUpIHtcbiAgQGluY2x1ZGUgdHlwby1wcmVmZXJyZWQtZm9udCgkdXNlLXByZWZlcnJlZCk7XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xuICBmb250LXdlaWdodDogNTAwO1xuICBsaW5lLWhlaWdodDogMTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XG5cbiAgQGlmICRjb2xvci1jb250cmFzdCB7XG4gICAgb3BhY2l0eTogLjg3O1xuICB9XG59XG5cbi8vLS0gU2hhZG93c1xuQG1peGluIGZvY3VzLXNoYWRvdygpIHtcbiAgYm94LXNoYWRvdzogMCAwIDhweCByZ2JhKDAsIDAsIDAsIC4xOCksIDAgOHB4IDE2cHggcmdiYSgwLCAwLCAwLCAuMzYpO1xufVxuXG5AbWl4aW4gc2hhZG93LTJkcCgpIHtcbiAgYm94LXNoYWRvdzogMCAycHggMnB4IDAgcmdiYSgwLCAwLCAwLCAkc2hhZG93LWtleS1wZW51bWJyYS1vcGFjaXR5KSxcbiAgICAgICAgICAgICAgICAwIDNweCAxcHggLTJweCByZ2JhKDAsIDAsIDAsICRzaGFkb3cta2V5LXVtYnJhLW9wYWNpdHkpLFxuICAgICAgICAgICAgICAgIDAgMXB4IDVweCAwIHJnYmEoMCwgMCwgMCwgJHNoYWRvdy1hbWJpZW50LXNoYWRvdy1vcGFjaXR5KTtcbn1cblxuQG1peGluIHNoYWRvdy0zZHAoKSB7XG4gIGJveC1zaGFkb3c6IDAgM3B4IDRweCAwIHJnYmEoMCwgMCwgMCwgJHNoYWRvdy1rZXktcGVudW1icmEtb3BhY2l0eSksXG4gICAgICAgICAgICAgICAgMCAzcHggM3B4IC0ycHggcmdiYSgwLCAwLCAwLCAkc2hhZG93LWtleS11bWJyYS1vcGFjaXR5KSxcbiAgICAgICAgICAgICAgICAwIDFweCA4cHggMCByZ2JhKDAsIDAsIDAsICRzaGFkb3ctYW1iaWVudC1zaGFkb3ctb3BhY2l0eSk7XG59XG5cbkBtaXhpbiBzaGFkb3ctNGRwKCkge1xuICBib3gtc2hhZG93OiAwIDRweCA1cHggMCByZ2JhKDAsIDAsIDAsICRzaGFkb3cta2V5LXBlbnVtYnJhLW9wYWNpdHkpLFxuICAgICAgICAgICAgICAgIDAgMXB4IDEwcHggMCByZ2JhKDAsIDAsIDAsICRzaGFkb3ctYW1iaWVudC1zaGFkb3ctb3BhY2l0eSksXG4gICAgICAgICAgICAgICAgMCAycHggNHB4IC0xcHggcmdiYSgwLCAwLCAwLCAkc2hhZG93LWtleS11bWJyYS1vcGFjaXR5KTtcbn1cblxuQG1peGluIHNoYWRvdy02ZHAoKSB7XG4gIGJveC1zaGFkb3c6IDAgNnB4IDEwcHggMCByZ2JhKDAsIDAsIDAsICRzaGFkb3cta2V5LXBlbnVtYnJhLW9wYWNpdHkpLFxuICAgICAgICAgICAgICAgIDAgMXB4IDE4cHggMCByZ2JhKDAsIDAsIDAsICRzaGFkb3ctYW1iaWVudC1zaGFkb3ctb3BhY2l0eSksXG4gICAgICAgICAgICAgICAgMCAzcHggNXB4IC0xcHggcmdiYSgwLCAwLCAwLCAkc2hhZG93LWtleS11bWJyYS1vcGFjaXR5KTtcbn1cblxuQG1peGluIHNoYWRvdy04ZHAoKSB7XG4gIGJveC1zaGFkb3c6IDAgOHB4IDEwcHggMXB4IHJnYmEoMCwgMCwgMCwgJHNoYWRvdy1rZXktcGVudW1icmEtb3BhY2l0eSksXG4gICAgICAgICAgICAgICAgMCAzcHggMTRweCAycHggcmdiYSgwLCAwLCAwLCAkc2hhZG93LWFtYmllbnQtc2hhZG93LW9wYWNpdHkpLFxuICAgICAgICAgICAgICAgIDAgNXB4IDVweCAtM3B4IHJnYmEoMCwgMCwgMCwgJHNoYWRvdy1rZXktdW1icmEtb3BhY2l0eSk7XG59XG5cbkBtaXhpbiBzaGFkb3ctMTZkcCgpIHtcbiAgYm94LXNoYWRvdzogMCAxNnB4IDI0cHggMnB4IHJnYmEoMCwgMCwgMCwgJHNoYWRvdy1rZXktcGVudW1icmEtb3BhY2l0eSksXG4gICAgICAgICAgICAgICAgMCA2cHggMzBweCA1cHggcmdiYSgwLCAwLCAwLCAkc2hhZG93LWFtYmllbnQtc2hhZG93LW9wYWNpdHkpLFxuICAgICAgICAgICAgICAgIDAgOHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsICRzaGFkb3cta2V5LXVtYnJhLW9wYWNpdHkpO1xufVxuXG4vLy0tIEFuaW1hdGlvbnNcbkBtaXhpbiBtYXRlcmlhbC1hbmltYXRpb24tZmFzdC1vdXQtc2xvdy1pbigkZHVyYXRpb246IC4ycykge1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogJGFuaW1hdGlvbi1jdXJ2ZS1mYXN0LW91dC1zbG93LWluO1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAkZHVyYXRpb247XG59XG5cbkBtaXhpbiBtYXRlcmlhbC1hbmltYXRpb24tbGluZWFyLW91dC1zbG93LWluKCRkdXJhdGlvbjogLjJzKSB7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiAkYW5pbWF0aW9uLWN1cnZlLWxpbmVhci1vdXQtc2xvdy1pbjtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogJGR1cmF0aW9uO1xufVxuXG5AbWl4aW4gbWF0ZXJpYWwtYW5pbWF0aW9uLWZhc3Qtb3V0LWxpbmVhci1pbigkZHVyYXRpb246IC4ycykge1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogJGFuaW1hdGlvbi1jdXJ2ZS1mYXN0LW91dC1saW5lYXItaW47XG4gIHRyYW5zaXRpb24tZHVyYXRpb246ICRkdXJhdGlvbjtcbn1cblxuQG1peGluIG1hdGVyaWFsLWFuaW1hdGlvbi1kZWZhdWx0KCRkdXJhdGlvbjogLjJzKSB7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiAkYW5pbWF0aW9uLWN1cnZlLWRlZmF1bHQ7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246ICRkdXJhdGlvbjtcbn1cblxuQG1peGluIG5vLXdlYmtpdC1zY3JvbGxiYXIge1xuICAmOjotd2Via2l0LXNjcm9sbGJhciB7XG4gICAgd2lkdGg6IDA7XG4gICAgaGVpZ2h0OiAwO1xuICB9XG59XG5cbkBtaXhpbiBidG4tY29sb3JzKCRuYW1lLCAkY29sb3IsICRiYWNrZ3JvdW5kLCAkaG92ZXIpIHtcbiAgLiN7JG5hbWV9Om5vdChbZGlzYWJsZWRdKSB7XG4gICAgJi5yYWlzZWQsICYuZmxvYXRpbmcge1xuICAgICAgY29sb3I6ICRjb2xvcjtcbiAgICAgIGJhY2tncm91bmQ6ICRiYWNrZ3JvdW5kO1xuICAgIH1cbiAgICAmLmZsYXQsICYudG9nZ2xlIHtcbiAgICAgIGNvbG9yOiAkYmFja2dyb3VuZDtcbiAgICAgICY6Zm9jdXM6bm90KDphY3RpdmUpIHtcbiAgICAgICAgYmFja2dyb3VuZDogJGhvdmVyO1xuICAgICAgfVxuICAgIH1cbiAgICAmLmZsYXQ6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogJGhvdmVyO1xuICAgIH1cbiAgfVxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogd2VicGFjazovLy9+L3JlYWN0LXRvb2xib3gvbGliL19taXhpbnMuc2Nzc1xuICoqLyIsIi8vLS0gQ29sb3IgY29uZmlndXJhdGlvblxuJGNvbG9yLWRpdmlkZXI6ICRwYWxldHRlLWdyZXktMjAwICFkZWZhdWx0O1xuJGNvbG9yLWJhY2tncm91bmQ6ICRjb2xvci13aGl0ZSAhZGVmYXVsdDtcbiRjb2xvci10ZXh0OiAkcGFsZXR0ZS1ncmV5LTkwMCAhZGVmYXVsdDtcbiRjb2xvci10ZXh0LXNlY29uZGFyeTogJHBhbGV0dGUtZ3JleS02MDAgIWRlZmF1bHQ7XG5cbiRjb2xvci1wcmltYXJ5OiAkcGFsZXR0ZS1pbmRpZ28tNTAwICFkZWZhdWx0O1xuJGNvbG9yLXByaW1hcnktZGFyazogJHBhbGV0dGUtaW5kaWdvLTcwMCAhZGVmYXVsdDtcbiRjb2xvci1hY2NlbnQ6ICRwYWxldHRlLXBpbmstYTIwMCAhZGVmYXVsdDtcbiRjb2xvci1hY2NlbnQtZGFyazogJHBhbGV0dGUtcGluay03MDAgIWRlZmF1bHQ7XG4kY29sb3ItcHJpbWFyeS1jb250cmFzdDogJGNvbG9yLWRhcmstY29udHJhc3QgIWRlZmF1bHQ7XG4kY29sb3ItYWNjZW50LWNvbnRyYXN0OiAkY29sb3ItZGFyay1jb250cmFzdCAhZGVmYXVsdDtcblxuLy8tLSBTaXppbmdcbiR1bml0OiAxcmVtICFkZWZhdWx0O1xuXG4vLyAtLSBGb250c1xuJHByZWZlcnJlZC1mb250OiBcIlJvYm90b1wiLCBcIkhlbHZldGljYVwiLCBcIkFyaWFsXCIsIHNhbnMtc2VyaWYgIWRlZmF1bHQ7XG4kZm9udC1zaXplOiAxLjYgKiAkdW5pdCAhZGVmYXVsdDtcbiRmb250LXNpemUtdGlueTogMS4yICogJHVuaXQgIWRlZmF1bHQ7XG4kZm9udC1zaXplLXNtYWxsOiAxLjQgKiAkdW5pdCAhZGVmYXVsdDtcbiRmb250LXNpemUtbm9ybWFsOiAkZm9udC1zaXplICFkZWZhdWx0O1xuJGZvbnQtc2l6ZS1iaWc6IDEuOCAqICR1bml0ICFkZWZhdWx0O1xuJGZvbnQtd2VpZ2h0LXRoaW46IDMwMCAhZGVmYXVsdDtcbiRmb250LXdlaWdodC1ub3JtYWw6IDQwMCAhZGVmYXVsdDtcbiRmb250LXdlaWdodC1zZW1pLWJvbGQ6IDUwMCAhZGVmYXVsdDtcbiRmb250LXdlaWdodC1ib2xkOiA3MDAgIWRlZmF1bHQ7XG5cbi8vLS0gU2hhZG93c1xuJHNoYWRvdy1rZXktdW1icmEtb3BhY2l0eTogMC4yICFkZWZhdWx0O1xuJHNoYWRvdy1rZXktcGVudW1icmEtb3BhY2l0eTogMC4xNCAhZGVmYXVsdDtcbiRzaGFkb3ctYW1iaWVudC1zaGFkb3ctb3BhY2l0eTogMC4xMiAhZGVmYXVsdDtcblxuLy8tLSBEZXB0aCBTaGFkb3dzXG4kemRlcHRoLXNoYWRvdy0xOiAwIDFweCA2cHggcmdiYSgwLDAsMCwuMTIpLCAwIDFweCA0cHggcmdiYSgwLDAsMCwuMjQpO1xuJHpkZXB0aC1zaGFkb3ctMjogMCAzcHggMTBweCByZ2JhKDAsMCwwLC4xNiksIDAgM3B4IDEwcHggcmdiYSgwLDAsMCwuMjMpO1xuJHpkZXB0aC1zaGFkb3ctMzogMCAxMHB4IDMwcHggcmdiYSgwLDAsMCwuMTkpLCAwIDZweCAxMHB4IHJnYmEoMCwwLDAsLjIzKTtcbiR6ZGVwdGgtc2hhZG93LTQ6IDAgMTRweCA0NXB4IHJnYmEoMCwwLDAsLjI1KSwgMCAxMHB4IDE4cHggcmdiYSgwLDAsMCwuMjIpO1xuJHpkZXB0aC1zaGFkb3ctNTogMCAxOXB4IDYwcHggcmdiYSgwLDAsMCwuMyksIDAgMTVweCAyMHB4IHJnYmEoMCwwLDAsLjIyKTtcblxuLy8tLSBBbmltYXRpb25cbiRhbmltYXRpb24tZHVyYXRpb246IC4zNXM7XG4kYW5pbWF0aW9uLWRlbGF5OiAkYW5pbWF0aW9uLWR1cmF0aW9uIC8gNTtcbiRhbmltYXRpb24tY3VydmUtZmFzdC1vdXQtc2xvdy1pbjogY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKSAhZGVmYXVsdDtcbiRhbmltYXRpb24tY3VydmUtbGluZWFyLW91dC1zbG93LWluOiBjdWJpYy1iZXppZXIoMCwgMCwgMC4yLCAxKSAhZGVmYXVsdDtcbiRhbmltYXRpb24tY3VydmUtZmFzdC1vdXQtbGluZWFyLWluOiBjdWJpYy1iZXppZXIoMC40LCAwLCAxLCAxKSAhZGVmYXVsdDtcbiRhbmltYXRpb24tY3VydmUtZGVmYXVsdDogJGFuaW1hdGlvbi1jdXJ2ZS1mYXN0LW91dC1zbG93LWluICFkZWZhdWx0O1xuXG4vLy0tIEluZGV4ZXNcbiR6LWluZGV4LWhpZ2hlc3Q6IDMwMCAhZGVmYXVsdDtcbiR6LWluZGV4LWhpZ2hlcjogMjAwICFkZWZhdWx0O1xuJHotaW5kZXgtaGlnaDogMTAwICFkZWZhdWx0O1xuJHotaW5kZXgtbm9ybWFsOiAxICFkZWZhdWx0O1xuJHotaW5kZXgtbG93OiAtMTAwICFkZWZhdWx0O1xuJHotaW5kZXgtbG93ZXI6IC0yMDAgIWRlZmF1bHQ7XG5cbi8vLS0gQnJlYWtwb2ludHNcbi8vIGhlaWdodCBvZiBhcHAgYmFyXG4vLyBodHRwczovL3d3dy5nb29nbGUuY29tL2Rlc2lnbi9zcGVjL2xheW91dC9tZXRyaWNzLWtleWxpbmVzLmh0bWwjbWV0cmljcy1rZXlsaW5lcy1rZXlsaW5lcy1zcGFjaW5nXG4kc3RhbmRhcmQtaW5jcmVtZW50LW1vYmlsZTogKDUuNiAqICR1bml0KSAhZGVmYXVsdDtcbiRzdGFuZGFyZC1pbmNyZW1lbnQtZGVza3RvcDogKDYuNCAqICR1bml0KSAhZGVmYXVsdDtcblxuLy8gaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9kZXNpZ24vc3BlYy9sYXlvdXQvbWV0cmljcy1rZXlsaW5lcy5odG1sI21ldHJpY3Mta2V5bGluZXMtYmFzZWxpbmUtZ3JpZHNcbiRiYXNlbGluZS1ncmlkOiAoMC44ICogJHVuaXQpICFkZWZhdWx0O1xuJGxheW91dC1ndXR0ZXItd2lkdGgtc206ICgkYmFzZWxpbmUtZ3JpZCAqIDIpICFkZWZhdWx0O1xuJGxheW91dC1ndXR0ZXItd2lkdGg6ICgkYmFzZWxpbmUtZ3JpZCAqIDMpICFkZWZhdWx0O1xuXG4vLyBodHRwczovL3d3dy5nb29nbGUuY29tL2Rlc2lnbi9zcGVjL2xheW91dC9yZXNwb25zaXZlLXVpLmh0bWwjcmVzcG9uc2l2ZS11aS1icmVha3BvaW50c1xuLy8gNCBjb2x1bW5zXG4kbGF5b3V0LWJyZWFrcG9pbnQteHhzOiA0ODBweCAhZGVmYXVsdDtcbi8vIDggY29sdW1uc1xuJGxheW91dC1icmVha3BvaW50LXhzOiA2MDBweCAhZGVmYXVsdDtcbi8vIDEyIGNvbHVtbnNcbiRsYXlvdXQtYnJlYWtwb2ludC1zbS10YWJsZXQ6IDcyMHB4ICFkZWZhdWx0O1xuJGxheW91dC1icmVha3BvaW50LXNtOiA4NDBweCAhZGVmYXVsdDtcbiRsYXlvdXQtYnJlYWtwb2ludC1tZDogOTYwcHggIWRlZmF1bHQ7XG4kbGF5b3V0LWJyZWFrcG9pbnQtbGctdGFibGV0OiAxMDI0cHggIWRlZmF1bHQ7XG4kbGF5b3V0LWJyZWFrcG9pbnQtbGc6IDEyODBweCAhZGVmYXVsdDtcbiRsYXlvdXQtYnJlYWtwb2ludC14bDogMTQ0MHB4ICFkZWZhdWx0O1xuJGxheW91dC1icmVha3BvaW50LXh4bDogMTYwMHB4ICFkZWZhdWx0O1xuJGxheW91dC1icmVha3BvaW50LXh4eGw6IDE5MjBweCAhZGVmYXVsdDtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHdlYnBhY2s6Ly8vfi9yZWFjdC10b29sYm94L2xpYi9fZ2xvYmFscy5zY3NzXG4gKiovIiwiQGltcG9ydCBcIn5yZWFjdC10b29sYm94L2xpYi9fY29sb3JzXCI7IFxuICR0aGVtZS1idWlsZGluZzogdHJ1ZTtcbiRjb2xvci1wcmltYXJ5OiAkcGFsZXR0ZS1pbmRpZ28tNTAwICFkZWZhdWx0O1xyXG4kY29sb3ItcHJpbWFyeS1kYXJrOiAkcGFsZXR0ZS1pbmRpZ28tNzAwICFkZWZhdWx0O1xyXG4kY29sb3ItYWNjZW50OiAkcGFsZXR0ZS1waW5rLWEyMDAgIWRlZmF1bHQ7XHJcbiRjb2xvci1hY2NlbnQtZGFyazogJHBhbGV0dGUtcGluay03MDAgIWRlZmF1bHQ7XHJcbiRjb2xvci1wcmltYXJ5LWNvbnRyYXN0OiAkY29sb3ItZGFyay1jb250cmFzdCAhZGVmYXVsdDtcclxuJGNvbG9yLWFjY2VudC1jb250cmFzdDogJGNvbG9yLWRhcmstY29udHJhc3QgIWRlZmF1bHQ7XHJcblxuQGltcG9ydCBcIi4uL2Jhc2VcIjtcbkBpbXBvcnQgXCIuL2NvbmZpZ1wiO1xuXG4ucm9vdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGhlaWdodDogJGFwcGJhci1oZWlnaHQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAgJGFwcGJhci1oLXBhZGRpbmc7XG4gIGNvbG9yOiAkYXBwYmFyLWNvbnRyYXN0O1xuICBiYWNrZ3JvdW5kOiAkYXBwYmFyLWNvbG9yO1xuXG4gICY6bm90KC5mbGF0KSB7XG4gICAgei1pbmRleDogJHotaW5kZXgtaGlnaDtcbiAgICBib3gtc2hhZG93OiAwIDJweCA1cHggcmdiYSgwLDAsMCwuMjYpO1xuICB9XG5cbiAgJi5maXhlZCB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHotaW5kZXg6ICR6LWluZGV4LWhpZ2hlc3Q7XG4gIH1cblxuICBhIHtcbiAgICBjb2xvcjogJGFwcGJhci1jb250cmFzdDtcbiAgfVxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogd2VicGFjazovLy9+L3JlYWN0LXRvb2xib3gvbGliL34vcmVhY3QtdG9vbGJveC9saWIvYXBwX2Jhci9zdHlsZS5zY3NzXG4gKiovIiwiJGFwcGJhci1jb2xvcjogJGNvbG9yLXByaW1hcnktZGFyayAhZGVmYXVsdDtcbiRhcHBiYXItY29udHJhc3Q6ICRjb2xvci1wcmltYXJ5LWNvbnRyYXN0ICFkZWZhdWx0O1xuJGFwcGJhci10aXRsZS10b3RhbC1kaXN0YW5jZTogOCAqICR1bml0ICFkZWZhdWx0O1xuJGFwcGJhci1oZWlnaHQ6IDYuNCAqICR1bml0ICFkZWZhdWx0O1xuJGFwcGJhci1oLXBhZGRpbmc6IDIuNCAqICR1bml0ICFkZWZhdWx0O1xuJGFwcGJhci10aXRsZS1kaXN0YW5jZTogJGFwcGJhci10aXRsZS10b3RhbC1kaXN0YW5jZSAtICRhcHBiYXItaC1wYWRkaW5nICFkZWZhdWx0O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogd2VicGFjazovLy9+L3JlYWN0LXRvb2xib3gvbGliL34vcmVhY3QtdG9vbGJveC9saWIvYXBwX2Jhci9fY29uZmlnLnNjc3NcbiAqKi8iLCIvLy0tIENvbG9yIGRlZmluaXRpb25zIHRha2VuIGZyb20gTWF0ZXJpYWwgRGVzaWduIExpdGVcblxuLy8gUmVkXG4kcGFsZXR0ZS1yZWQtNTA6IHJnYigyNTUsMjM1LDIzOCk7XG4kcGFsZXR0ZS1yZWQtMTAwOiByZ2IoMjU1LDIwNSwyMTApO1xuJHBhbGV0dGUtcmVkLTIwMDogcmdiKDIzOSwxNTQsMTU0KTtcbiRwYWxldHRlLXJlZC0zMDA6IHJnYigyMjksMTE1LDExNSk7XG4kcGFsZXR0ZS1yZWQtNDAwOiByZ2IoMjM5LDgzLDgwKTtcbiRwYWxldHRlLXJlZC01MDA6IHJnYigyNDQsNjcsNTQpO1xuJHBhbGV0dGUtcmVkLTYwMDogcmdiKDIyOSw1Nyw1Myk7XG4kcGFsZXR0ZS1yZWQtNzAwOiByZ2IoMjExLDQ3LDQ3KTtcbiRwYWxldHRlLXJlZC04MDA6IHJnYigxOTgsNDAsNDApO1xuJHBhbGV0dGUtcmVkLTkwMDogcmdiKDE4MywyOCwyOCk7XG4kcGFsZXR0ZS1yZWQtYTEwMDogcmdiKDI1NSwxMzgsMTI4KTtcbiRwYWxldHRlLXJlZC1hMjAwOiByZ2IoMjU1LDgyLDgyKTtcbiRwYWxldHRlLXJlZC1hNDAwOiByZ2IoMjU1LDIzLDY4KTtcbiRwYWxldHRlLXJlZC1hNzAwOiByZ2IoMjEzLDAsMCk7XG5cbi8vIFBpbmtcbiRwYWxldHRlLXBpbmstNTA6IHJnYigyNTIsMjI4LDIzNik7XG4kcGFsZXR0ZS1waW5rLTEwMDogcmdiKDI0OCwxODcsMjA4KTtcbiRwYWxldHRlLXBpbmstMjAwOiByZ2IoMjQ0LDE0MywxNzcpO1xuJHBhbGV0dGUtcGluay0zMDA6IHJnYigyNDAsOTgsMTQ2KTtcbiRwYWxldHRlLXBpbmstNDAwOiByZ2IoMjM2LDY0LDEyMik7XG4kcGFsZXR0ZS1waW5rLTUwMDogcmdiKDIzMywzMCw5OSk7XG4kcGFsZXR0ZS1waW5rLTYwMDogcmdiKDIxNiwyNyw5Nik7XG4kcGFsZXR0ZS1waW5rLTcwMDogcmdiKDE5NCwyNCw5MSk7XG4kcGFsZXR0ZS1waW5rLTgwMDogcmdiKDE3MywyMCw4Nyk7XG4kcGFsZXR0ZS1waW5rLTkwMDogcmdiKDEzNiwxNCw3OSk7XG4kcGFsZXR0ZS1waW5rLWExMDA6IHJnYigyNTUsMTI4LDE3MSk7XG4kcGFsZXR0ZS1waW5rLWEyMDA6IHJnYigyNTUsNjQsMTI5KTtcbiRwYWxldHRlLXBpbmstYTQwMDogcmdiKDI0NSwwLDg3KTtcbiRwYWxldHRlLXBpbmstYTcwMDogcmdiKDE5NywxNyw5OCk7XG5cbi8vIFB1cnBsZVxuJHBhbGV0dGUtcHVycGxlLTUwOiByZ2IoMjQzLDIyOSwyNDUpO1xuJHBhbGV0dGUtcHVycGxlLTEwMDogcmdiKDIyNSwxOTAsMjMxKTtcbiRwYWxldHRlLXB1cnBsZS0yMDA6IHJnYigyMDYsMTQ3LDIxNik7XG4kcGFsZXR0ZS1wdXJwbGUtMzAwOiByZ2IoMTg2LDEwNCwyMDApO1xuJHBhbGV0dGUtcHVycGxlLTQwMDogcmdiKDE3MSw3MSwxODgpO1xuJHBhbGV0dGUtcHVycGxlLTUwMDogcmdiKDE1NiwzOSwxNzYpO1xuJHBhbGV0dGUtcHVycGxlLTYwMDogcmdiKDE0MiwzNiwxNzApO1xuJHBhbGV0dGUtcHVycGxlLTcwMDogcmdiKDEyMywzMSwxNjIpO1xuJHBhbGV0dGUtcHVycGxlLTgwMDogcmdiKDEwNiwyNywxNTQpO1xuJHBhbGV0dGUtcHVycGxlLTkwMDogcmdiKDc0LDIwLDE0MCk7XG4kcGFsZXR0ZS1wdXJwbGUtYTEwMDogcmdiKDIzNCwxMjgsMjUyKTtcbiRwYWxldHRlLXB1cnBsZS1hMjAwOiByZ2IoMjI0LDY0LDI1MSk7XG4kcGFsZXR0ZS1wdXJwbGUtYTQwMDogcmdiKDIxMywwLDI0OSk7XG4kcGFsZXR0ZS1wdXJwbGUtYTcwMDogcmdiKDE3MCwwLDI1NSk7XG5cbi8vRGVlcCBQdXJwbGVcbiRwYWxldHRlLWRlZXAtcHVycGxlLTUwOiByZ2IoMjM3LDIzMSwyNDYpO1xuJHBhbGV0dGUtZGVlcC1wdXJwbGUtMTAwOiByZ2IoMjA5LDE5NiwyMzMpO1xuJHBhbGV0dGUtZGVlcC1wdXJwbGUtMjAwOiByZ2IoMTc5LDE1NywyMTkpO1xuJHBhbGV0dGUtZGVlcC1wdXJwbGUtMzAwOiByZ2IoMTQ5LDExNywyMDUpO1xuJHBhbGV0dGUtZGVlcC1wdXJwbGUtNDAwOiByZ2IoMTI2LDg3LDE5NCk7XG4kcGFsZXR0ZS1kZWVwLXB1cnBsZS01MDA6IHJnYigxMDMsNTgsMTgzKTtcbiRwYWxldHRlLWRlZXAtcHVycGxlLTYwMDogcmdiKDk0LDUzLDE3Nyk7XG4kcGFsZXR0ZS1kZWVwLXB1cnBsZS03MDA6IHJnYig4MSw0NSwxNjgpO1xuJHBhbGV0dGUtZGVlcC1wdXJwbGUtODAwOiByZ2IoNjksMzksMTYwKTtcbiRwYWxldHRlLWRlZXAtcHVycGxlLTkwMDogcmdiKDQ5LDI3LDE0Nik7XG4kcGFsZXR0ZS1kZWVwLXB1cnBsZS1hMTAwOiByZ2IoMTc5LDEzNiwyNTUpO1xuJHBhbGV0dGUtZGVlcC1wdXJwbGUtYTIwMDogcmdiKDEyNCw3NywyNTUpO1xuJHBhbGV0dGUtZGVlcC1wdXJwbGUtYTQwMDogcmdiKDEwMSwzMSwyNTUpO1xuJHBhbGV0dGUtZGVlcC1wdXJwbGUtYTcwMDogcmdiKDk4LDAsMjM0KTtcblxuLy8gSW5kaWdvXG4kcGFsZXR0ZS1pbmRpZ28tNTA6IHJnYigyMzIsMjM0LDI0Nik7XG4kcGFsZXR0ZS1pbmRpZ28tMTAwOiByZ2IoMTk3LDIwMiwyMzMpO1xuJHBhbGV0dGUtaW5kaWdvLTIwMDogcmdiKDE1OSwxNjgsMjE4KTtcbiRwYWxldHRlLWluZGlnby0zMDA6IHJnYigxMjEsMTM0LDIwMyk7XG4kcGFsZXR0ZS1pbmRpZ28tNDAwOiByZ2IoOTIsMTA3LDE5Mik7XG4kcGFsZXR0ZS1pbmRpZ28tNTAwOiByZ2IoNjMsODEsMTgxKTtcbiRwYWxldHRlLWluZGlnby02MDA6IHJnYig1Nyw3MywxNzEpO1xuJHBhbGV0dGUtaW5kaWdvLTcwMDogcmdiKDQ4LDYzLDE1OSk7XG4kcGFsZXR0ZS1pbmRpZ28tODAwOiByZ2IoNDAsNTMsMTQ3KTtcbiRwYWxldHRlLWluZGlnby05MDA6IHJnYigyNiwzNSwxMjYpO1xuJHBhbGV0dGUtaW5kaWdvLWExMDA6IHJnYigxNDAsMTU4LDI1NSk7XG4kcGFsZXR0ZS1pbmRpZ28tYTIwMDogcmdiKDgzLDEwOSwyNTQpO1xuJHBhbGV0dGUtaW5kaWdvLWE0MDA6IHJnYig2MSw5MCwyNTQpO1xuJHBhbGV0dGUtaW5kaWdvLWE3MDA6IHJnYig0OCw3OSwyNTQpO1xuXG4vLyBCbHVlXG4kcGFsZXR0ZS1ibHVlLTUwOiByZ2IoMjI3LDI0MiwyNTMpO1xuJHBhbGV0dGUtYmx1ZS0xMDA6IHJnYigxODcsMjIyLDI1MSk7XG4kcGFsZXR0ZS1ibHVlLTIwMDogcmdiKDE0NCwyMDIsMjQ5KTtcbiRwYWxldHRlLWJsdWUtMzAwOiByZ2IoMTAwLDE4MSwyNDYpO1xuJHBhbGV0dGUtYmx1ZS00MDA6IHJnYig2NiwxNjUsMjQ1KTtcbiRwYWxldHRlLWJsdWUtNTAwOiByZ2IoMzMsMTUwLDI0Myk7XG4kcGFsZXR0ZS1ibHVlLTYwMDogcmdiKDMwLDEzNiwyMjkpO1xuJHBhbGV0dGUtYmx1ZS03MDA6IHJnYigyNSwxMTgsMjEwKTtcbiRwYWxldHRlLWJsdWUtODAwOiByZ2IoMjEsMTAxLDE5Mik7XG4kcGFsZXR0ZS1ibHVlLTkwMDogcmdiKDEzLDcxLDE2MSk7XG4kcGFsZXR0ZS1ibHVlLWExMDA6IHJnYigxMzAsMTc3LDI1NSk7XG4kcGFsZXR0ZS1ibHVlLWEyMDA6IHJnYig2OCwxMzgsMjU1KTtcbiRwYWxldHRlLWJsdWUtYTQwMDogcmdiKDQxLDEyMSwyNTUpO1xuJHBhbGV0dGUtYmx1ZS1hNzAwOiByZ2IoNDEsOTgsMjU1KTtcblxuLy8gTGlnaHQgQmx1ZVxuJHBhbGV0dGUtbGlnaHQtYmx1ZS01MDogcmdiKDIyNSwyNDUsMjU0KTtcbiRwYWxldHRlLWxpZ2h0LWJsdWUtMTAwOiByZ2IoMTc5LDIyOSwyNTIpO1xuJHBhbGV0dGUtbGlnaHQtYmx1ZS0yMDA6IHJnYigxMjksMjEyLDI1MCk7XG4kcGFsZXR0ZS1saWdodC1ibHVlLTMwMDogcmdiKDc5LDE5NSwyNDcpO1xuJHBhbGV0dGUtbGlnaHQtYmx1ZS00MDA6IHJnYig0MSwxODIsMjQ2KTtcbiRwYWxldHRlLWxpZ2h0LWJsdWUtNTAwOiByZ2IoMywxNjksMjQ0KTtcbiRwYWxldHRlLWxpZ2h0LWJsdWUtNjAwOiByZ2IoMywxNTUsMjI5KTtcbiRwYWxldHRlLWxpZ2h0LWJsdWUtNzAwOiByZ2IoMiwxMzYsMjA5KTtcbiRwYWxldHRlLWxpZ2h0LWJsdWUtODAwOiByZ2IoMiwxMTksMTg5KTtcbiRwYWxldHRlLWxpZ2h0LWJsdWUtOTAwOiByZ2IoMSw4NywxNTUpO1xuJHBhbGV0dGUtbGlnaHQtYmx1ZS1hMTAwOiByZ2IoMTI4LDIxNiwyNTUpO1xuJHBhbGV0dGUtbGlnaHQtYmx1ZS1hMjAwOiByZ2IoNjQsMTk2LDI1NSk7XG4kcGFsZXR0ZS1saWdodC1ibHVlLWE0MDA6IHJnYigwLDE3NiwyNTUpO1xuJHBhbGV0dGUtbGlnaHQtYmx1ZS1hNzAwOiByZ2IoMCwxNDUsMjM0KTtcblxuLy8gQ3lhblxuJHBhbGV0dGUtY3lhbi01MDogcmdiKDIyNCwyNDcsMjUwKTtcbiRwYWxldHRlLWN5YW4tMTAwOiByZ2IoMTc4LDIzNSwyNDIpO1xuJHBhbGV0dGUtY3lhbi0yMDA6IHJnYigxMjgsMjIyLDIzNCk7XG4kcGFsZXR0ZS1jeWFuLTMwMDogcmdiKDc3LDIwOCwyMjUpO1xuJHBhbGV0dGUtY3lhbi00MDA6IHJnYigzOCwxOTgsMjE4KTtcbiRwYWxldHRlLWN5YW4tNTAwOiByZ2IoMCwxODgsMjEyKTtcbiRwYWxldHRlLWN5YW4tNjAwOiByZ2IoMCwxNzIsMTkzKTtcbiRwYWxldHRlLWN5YW4tNzAwOiByZ2IoMCwxNTEsMTY3KTtcbiRwYWxldHRlLWN5YW4tODAwOiByZ2IoMCwxMzEsMTQzKTtcbiRwYWxldHRlLWN5YW4tOTAwOiByZ2IoMCw5NiwxMDApO1xuJHBhbGV0dGUtY3lhbi1hMTAwOiByZ2IoMTMyLDI1NSwyNTUpO1xuJHBhbGV0dGUtY3lhbi1hMjAwOiByZ2IoMjQsMjU1LDI1NSk7XG4kcGFsZXR0ZS1jeWFuLWE0MDA6IHJnYigwLDIyOSwyNTUpO1xuJHBhbGV0dGUtY3lhbi1hNzAwOiByZ2IoMCwxODQsMjEyKTtcblxuLy8gVGVhbFxuJHBhbGV0dGUtdGVhbC01MDogcmdiKDIyNCwyNDIsMjQxKTtcbiRwYWxldHRlLXRlYWwtMTAwOiByZ2IoMTc4LDIyMywyMTkpO1xuJHBhbGV0dGUtdGVhbC0yMDA6IHJnYigxMjgsMjAzLDE5Nik7XG4kcGFsZXR0ZS10ZWFsLTMwMDogcmdiKDc3LDE4MiwxNzIpO1xuJHBhbGV0dGUtdGVhbC00MDA6IHJnYigzOCwxNjYsMTU0KTtcbiRwYWxldHRlLXRlYWwtNTAwOiByZ2IoMCwxNTAsMTM2KTtcbiRwYWxldHRlLXRlYWwtNjAwOiByZ2IoMCwxMzcsMTIzKTtcbiRwYWxldHRlLXRlYWwtNzAwOiByZ2IoMCwxMjEsMTA3KTtcbiRwYWxldHRlLXRlYWwtODAwOiByZ2IoMCwxMDUsOTIpO1xuJHBhbGV0dGUtdGVhbC05MDA6IHJnYigwLDc3LDY0KTtcbiRwYWxldHRlLXRlYWwtYTEwMDogcmdiKDE2NywyNTUsMjM1KTtcbiRwYWxldHRlLXRlYWwtYTIwMDogcmdiKDEwMCwyNTUsMjE4KTtcbiRwYWxldHRlLXRlYWwtYTQwMDogcmdiKDI5LDIzMywxODIpO1xuJHBhbGV0dGUtdGVhbC1hNzAwOiByZ2IoMCwxOTEsMTY1KTtcblxuLy8gR3JlZW5cbiRwYWxldHRlLWdyZWVuLTUwOiByZ2IoMjMyLDI0NSwyMzMpO1xuJHBhbGV0dGUtZ3JlZW4tMTAwOiByZ2IoMjAwLDIzMCwyMDEpO1xuJHBhbGV0dGUtZ3JlZW4tMjAwOiByZ2IoMTY1LDIxNCwxNjcpO1xuJHBhbGV0dGUtZ3JlZW4tMzAwOiByZ2IoMTI5LDE5OSwxMzIpO1xuJHBhbGV0dGUtZ3JlZW4tNDAwOiByZ2IoMTAyLDE4NywxMDYpO1xuJHBhbGV0dGUtZ3JlZW4tNTAwOiByZ2IoNzYsMTc1LDgwKTtcbiRwYWxldHRlLWdyZWVuLTYwMDogcmdiKDY3LDE2MCw3MSk7XG4kcGFsZXR0ZS1ncmVlbi03MDA6IHJnYig1NiwxNDIsNjApO1xuJHBhbGV0dGUtZ3JlZW4tODAwOiByZ2IoNDYsMTI1LDUwKTtcbiRwYWxldHRlLWdyZWVuLTkwMDogcmdiKDI3LDk0LDMyKTtcbiRwYWxldHRlLWdyZWVuLWExMDA6IHJnYigxODUsMjQ2LDIwMik7XG4kcGFsZXR0ZS1ncmVlbi1hMjAwOiByZ2IoMTA1LDI0MCwxNzQpO1xuJHBhbGV0dGUtZ3JlZW4tYTQwMDogcmdiKDAsMjMwLDExOCk7XG4kcGFsZXR0ZS1ncmVlbi1hNzAwOiByZ2IoMCwyMDAsODMpO1xuXG4vLyBHcmVlblxuJHBhbGV0dGUtbGlnaHQtZ3JlZW4tNTA6IHJnYigyNDEsMjQ4LDIzMyk7XG4kcGFsZXR0ZS1saWdodC1ncmVlbi0xMDA6IHJnYigyMjAsMjM3LDIwMCk7XG4kcGFsZXR0ZS1saWdodC1ncmVlbi0yMDA6IHJnYigxOTcsMjI1LDE2NSk7XG4kcGFsZXR0ZS1saWdodC1ncmVlbi0zMDA6IHJnYigxNzQsMjEzLDEyOSk7XG4kcGFsZXR0ZS1saWdodC1ncmVlbi00MDA6IHJnYigxNTYsMjA0LDEwMSk7XG4kcGFsZXR0ZS1saWdodC1ncmVlbi01MDA6IHJnYigxMzksMTk1LDc0KTtcbiRwYWxldHRlLWxpZ2h0LWdyZWVuLTYwMDogcmdiKDEyNCwxNzksNjYpO1xuJHBhbGV0dGUtbGlnaHQtZ3JlZW4tNzAwOiByZ2IoMTA0LDE1OSw1Nik7XG4kcGFsZXR0ZS1saWdodC1ncmVlbi04MDA6IHJnYig4NSwxMzksNDcpO1xuJHBhbGV0dGUtbGlnaHQtZ3JlZW4tOTAwOiByZ2IoNTEsMTA1LDMwKTtcbiRwYWxldHRlLWxpZ2h0LWdyZWVuLWExMDA6IHJnYigyMDQsMjU1LDE0NCk7XG4kcGFsZXR0ZS1saWdodC1ncmVlbi1hMjAwOiByZ2IoMTc4LDI1NSw4OSk7XG4kcGFsZXR0ZS1saWdodC1ncmVlbi1hNDAwOiByZ2IoMTE4LDI1NSwzKTtcbiRwYWxldHRlLWxpZ2h0LWdyZWVuLWE3MDA6IHJnYigxMDAsMjIxLDIzKTtcblxuLy8gTGltZVxuJHBhbGV0dGUtbGltZS01MDogcmdiKDI0OSwyNTEsMjMxKTtcbiRwYWxldHRlLWxpbWUtMTAwOiByZ2IoMjQwLDI0NCwxOTUpO1xuJHBhbGV0dGUtbGltZS0yMDA6IHJnYigyMzAsMjM4LDE1Nik7XG4kcGFsZXR0ZS1saW1lLTMwMDogcmdiKDIyMCwyMzEsMTE3KTtcbiRwYWxldHRlLWxpbWUtNDAwOiByZ2IoMjEyLDIyNSw4Nyk7XG4kcGFsZXR0ZS1saW1lLTUwMDogcmdiKDIwNSwyMjAsNTcpO1xuJHBhbGV0dGUtbGltZS02MDA6IHJnYigxOTIsMjAyLDUxKTtcbiRwYWxldHRlLWxpbWUtNzAwOiByZ2IoMTc1LDE4MCw0Myk7XG4kcGFsZXR0ZS1saW1lLTgwMDogcmdiKDE1OCwxNTcsMzYpO1xuJHBhbGV0dGUtbGltZS05MDA6IHJnYigxMzAsMTE5LDIzKTtcbiRwYWxldHRlLWxpbWUtYTEwMDogcmdiKDI0NCwyNTUsMTI5KTtcbiRwYWxldHRlLWxpbWUtYTIwMDogcmdiKDIzOCwyNTUsNjUpO1xuJHBhbGV0dGUtbGltZS1hNDAwOiByZ2IoMTk4LDI1NSwwKTtcbiRwYWxldHRlLWxpbWUtYTcwMDogcmdiKDE3NCwyMzQsMCk7XG5cbi8vIFllbGxvd1xuJHBhbGV0dGUteWVsbG93LTUwOiByZ2IoMjU1LDI1MywyMzEpO1xuJHBhbGV0dGUteWVsbG93LTEwMDogcmdiKDI1NSwyNDksMTk2KTtcbiRwYWxldHRlLXllbGxvdy0yMDA6IHJnYigyNTUsMjQ1LDE1Nyk7XG4kcGFsZXR0ZS15ZWxsb3ctMzAwOiByZ2IoMjU1LDI0MSwxMTgpO1xuJHBhbGV0dGUteWVsbG93LTQwMDogcmdiKDI1NSwyMzgsODgpO1xuJHBhbGV0dGUteWVsbG93LTUwMDogcmdiKDI1NSwyMzUsNTkpO1xuJHBhbGV0dGUteWVsbG93LTYwMDogcmdiKDI1MywyMTYsNTMpO1xuJHBhbGV0dGUteWVsbG93LTcwMDogcmdiKDI1MSwxOTIsNDUpO1xuJHBhbGV0dGUteWVsbG93LTgwMDogcmdiKDI0OSwxNjgsMzcpO1xuJHBhbGV0dGUteWVsbG93LTkwMDogcmdiKDI0NSwxMjcsMjMpO1xuJHBhbGV0dGUteWVsbG93LWExMDA6IHJnYigyNTUsMjU1LDE0MSk7XG4kcGFsZXR0ZS15ZWxsb3ctYTIwMDogcmdiKDI1NSwyNTUsMCk7XG4kcGFsZXR0ZS15ZWxsb3ctYTQwMDogcmdiKDI1NSwyMzQsMCk7XG4kcGFsZXR0ZS15ZWxsb3ctYTcwMDogcmdiKDI1NSwyMTQsMCk7XG5cbi8vIEFtYmVyXG4kcGFsZXR0ZS1hbWJlci01MDogcmdiKDI1NSwyNDgsMjI1KTtcbiRwYWxldHRlLWFtYmVyLTEwMDogcmdiKDI1NSwyMzYsMTc5KTtcbiRwYWxldHRlLWFtYmVyLTIwMDogcmdiKDI1NSwyMjQsMTMwKTtcbiRwYWxldHRlLWFtYmVyLTMwMDogcmdiKDI1NSwyMTMsNzkpO1xuJHBhbGV0dGUtYW1iZXItNDAwOiByZ2IoMjU1LDIwMiw0MCk7XG4kcGFsZXR0ZS1hbWJlci01MDA6IHJnYigyNTUsMTkzLDcpO1xuJHBhbGV0dGUtYW1iZXItNjAwOiByZ2IoMjU1LDE3OSwwKTtcbiRwYWxldHRlLWFtYmVyLTcwMDogcmdiKDI1NSwxNjAsMCk7XG4kcGFsZXR0ZS1hbWJlci04MDA6IHJnYigyNTUsMTQzLDApO1xuJHBhbGV0dGUtYW1iZXItOTAwOiByZ2IoMjU1LDExMSwwKTtcbiRwYWxldHRlLWFtYmVyLWExMDA6IHJnYigyNTUsMjI5LDEyNyk7XG4kcGFsZXR0ZS1hbWJlci1hMjAwOiByZ2IoMjU1LDIxNSw2NCk7XG4kcGFsZXR0ZS1hbWJlci1hNDAwOiByZ2IoMjU1LDE5NiwwKTtcbiRwYWxldHRlLWFtYmVyLWE3MDA6IHJnYigyNTUsMTcxLDApO1xuXG4vLyBPcmFuZ2VcbiRwYWxldHRlLW9yYW5nZS01MDogcmdiKDI1NSwyNDMsMjI0KTtcbiRwYWxldHRlLW9yYW5nZS0xMDA6IHJnYigyNTUsMjI0LDE3OCk7XG4kcGFsZXR0ZS1vcmFuZ2UtMjAwOiByZ2IoMjU1LDIwNCwxMjgpO1xuJHBhbGV0dGUtb3JhbmdlLTMwMDogcmdiKDI1NSwxODMsNzcpO1xuJHBhbGV0dGUtb3JhbmdlLTQwMDogcmdiKDI1NSwxNjcsMzgpO1xuJHBhbGV0dGUtb3JhbmdlLTUwMDogcmdiKDI1NSwxNTIsMCk7XG4kcGFsZXR0ZS1vcmFuZ2UtNjAwOiByZ2IoMjUxLDE0MCwwKTtcbiRwYWxldHRlLW9yYW5nZS03MDA6IHJnYigyNDUsMTI0LDApO1xuJHBhbGV0dGUtb3JhbmdlLTgwMDogcmdiKDIzOSwxMDgsMCk7XG4kcGFsZXR0ZS1vcmFuZ2UtOTAwOiByZ2IoMjMwLDgxLDApO1xuJHBhbGV0dGUtb3JhbmdlLWExMDA6IHJnYigyNTUsMjA5LDEyOCk7XG4kcGFsZXR0ZS1vcmFuZ2UtYTIwMDogcmdiKDI1NSwxNzEsNjQpO1xuJHBhbGV0dGUtb3JhbmdlLWE0MDA6IHJnYigyNTUsMTQ1LDApO1xuJHBhbGV0dGUtb3JhbmdlLWE3MDA6IHJnYigyNTUsMTA5LDApO1xuXG4vLyBEZWVwIE9yYW5nZVxuJHBhbGV0dGUtZGVlcC1vcmFuZ2UtNTA6IHJnYigyNTEsMjMzLDIzMSk7XG4kcGFsZXR0ZS1kZWVwLW9yYW5nZS0xMDA6IHJnYigyNTUsMjA0LDE4OCk7XG4kcGFsZXR0ZS1kZWVwLW9yYW5nZS0yMDA6IHJnYigyNTUsMTcxLDE0NSk7XG4kcGFsZXR0ZS1kZWVwLW9yYW5nZS0zMDA6IHJnYigyNTUsMTM4LDEwMSk7XG4kcGFsZXR0ZS1kZWVwLW9yYW5nZS00MDA6IHJnYigyNTUsMTEyLDY3KTtcbiRwYWxldHRlLWRlZXAtb3JhbmdlLTUwMDogcmdiKDI1NSw4NywzNCk7XG4kcGFsZXR0ZS1kZWVwLW9yYW5nZS02MDA6IHJnYigyNDQsODEsMzApO1xuJHBhbGV0dGUtZGVlcC1vcmFuZ2UtNzAwOiByZ2IoMjMwLDc0LDI1KTtcbiRwYWxldHRlLWRlZXAtb3JhbmdlLTgwMDogcmdiKDIxNiw2NywyMSk7XG4kcGFsZXR0ZS1kZWVwLW9yYW5nZS05MDA6IHJnYigxOTEsNTQsMTIpO1xuJHBhbGV0dGUtZGVlcC1vcmFuZ2UtYTEwMDogcmdiKDI1NSwxNTgsMTI4KTtcbiRwYWxldHRlLWRlZXAtb3JhbmdlLWEyMDA6IHJnYigyNTUsMTEwLDY0KTtcbiRwYWxldHRlLWRlZXAtb3JhbmdlLWE0MDA6IHJnYigyNTUsNjEsMCk7XG4kcGFsZXR0ZS1kZWVwLW9yYW5nZS1hNzAwOiByZ2IoMjIxLDQ0LDApO1xuXG4vLyBCcm93blxuJHBhbGV0dGUtYnJvd24tNTA6IHJnYigyMzksMjM1LDIzMyk7XG4kcGFsZXR0ZS1icm93bi0xMDA6IHJnYigyMTUsMjA0LDIwMCk7XG4kcGFsZXR0ZS1icm93bi0yMDA6IHJnYigxODgsMTcwLDE2NCk7XG4kcGFsZXR0ZS1icm93bi0zMDA6IHJnYigxNjEsMTM2LDEyNyk7XG4kcGFsZXR0ZS1icm93bi00MDA6IHJnYigxNDEsMTEwLDk5KTtcbiRwYWxldHRlLWJyb3duLTUwMDogcmdiKDEyMSw4NSw3Mik7XG4kcGFsZXR0ZS1icm93bi02MDA6IHJnYigxMDksNzYsNjUpO1xuJHBhbGV0dGUtYnJvd24tNzAwOiByZ2IoOTMsNjQsNTUpO1xuJHBhbGV0dGUtYnJvd24tODAwOiByZ2IoNzgsNTIsNDYpO1xuJHBhbGV0dGUtYnJvd24tOTAwOiByZ2IoNjIsMzksMzUpO1xuXG4vLyBHcmV5XG4kcGFsZXR0ZS1ncmV5LTUwOiByZ2IoMjUwLDI1MCwyNTApO1xuJHBhbGV0dGUtZ3JleS0xMDA6IHJnYigyNDUsMjQ1LDI0NSk7XG4kcGFsZXR0ZS1ncmV5LTIwMDogcmdiKDIzOCwyMzgsMjM4KTtcbiRwYWxldHRlLWdyZXktMzAwOiByZ2IoMjI0LDIyNCwyMjQpO1xuJHBhbGV0dGUtZ3JleS00MDA6IHJnYigxODksMTg5LDE4OSk7XG4kcGFsZXR0ZS1ncmV5LTUwMDogcmdiKDE1OCwxNTgsMTU4KTtcbiRwYWxldHRlLWdyZXktNjAwOiByZ2IoMTE3LDExNywxMTcpO1xuJHBhbGV0dGUtZ3JleS03MDA6IHJnYig5Nyw5Nyw5Nyk7XG4kcGFsZXR0ZS1ncmV5LTgwMDogcmdiKDY2LDY2LDY2KTtcbiRwYWxldHRlLWdyZXktOTAwOiByZ2IoMzMsMzMsMzMpO1xuXG4vLyBCbHVlIEdyZXlcbiRwYWxldHRlLWJsdWUtZ3JleS01MDogcmdiKDIzNiwyMzksMjQxKTtcbiRwYWxldHRlLWJsdWUtZ3JleS0xMDA6IHJnYigyMDcsMjE2LDIyMCk7XG4kcGFsZXR0ZS1ibHVlLWdyZXktMjAwOiByZ2IoMTc2LDE5MCwxOTcpO1xuJHBhbGV0dGUtYmx1ZS1ncmV5LTMwMDogcmdiKDE0NCwxNjQsMTc0KTtcbiRwYWxldHRlLWJsdWUtZ3JleS00MDA6IHJnYigxMjAsMTQ0LDE1Nik7XG4kcGFsZXR0ZS1ibHVlLWdyZXktNTAwOiByZ2IoOTYsMTI1LDEzOSk7XG4kcGFsZXR0ZS1ibHVlLWdyZXktNjAwOiByZ2IoODQsMTEwLDEyMik7XG4kcGFsZXR0ZS1ibHVlLWdyZXktNzAwOiByZ2IoNjksOTAsMTAwKTtcbiRwYWxldHRlLWJsdWUtZ3JleS04MDA6IHJnYig1NSw3MSw3OSk7XG4kcGFsZXR0ZS1ibHVlLWdyZXktOTAwOiByZ2IoMzgsNTAsNTYpO1xuXG4kY29sb3ItYmxhY2s6IHJnYigwLDAsMCk7XG4kY29sb3Itd2hpdGU6IHJnYigyNTUsMjU1LDI1NSk7XG5cbi8vLS0gVGhlIHR3byBwb3NzaWJsZSBjb2xvcnMgZm9yIG92ZXJsYXllZCB0ZXh0LlxuJHN0eWxlZ3VpZGUtZ2VuZXJhdGUtdGVtcGxhdGU6IGZhbHNlICFkZWZhdWx0O1xuJGNvbG9yLWRhcmstY29udHJhc3Q6ICRjb2xvci13aGl0ZSAhZGVmYXVsdDtcbiRjb2xvci1saWdodC1jb250cmFzdDogJGNvbG9yLWJsYWNrICFkZWZhdWx0O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogd2VicGFjazovLy9+L3JlYWN0LXRvb2xib3gvbGliL34vcmVhY3QtdG9vbGJveC9saWIvX2NvbG9ycy5zY3NzXG4gKiovIiwiLy8tLSBDb2xvciBjb25maWd1cmF0aW9uXG4kY29sb3ItZGl2aWRlcjogJHBhbGV0dGUtZ3JleS0yMDAgIWRlZmF1bHQ7XG4kY29sb3ItYmFja2dyb3VuZDogJGNvbG9yLXdoaXRlICFkZWZhdWx0O1xuJGNvbG9yLXRleHQ6ICRwYWxldHRlLWdyZXktOTAwICFkZWZhdWx0O1xuJGNvbG9yLXRleHQtc2Vjb25kYXJ5OiAkcGFsZXR0ZS1ncmV5LTYwMCAhZGVmYXVsdDtcblxuJGNvbG9yLXByaW1hcnk6ICRwYWxldHRlLWluZGlnby01MDAgIWRlZmF1bHQ7XG4kY29sb3ItcHJpbWFyeS1kYXJrOiAkcGFsZXR0ZS1pbmRpZ28tNzAwICFkZWZhdWx0O1xuJGNvbG9yLWFjY2VudDogJHBhbGV0dGUtcGluay1hMjAwICFkZWZhdWx0O1xuJGNvbG9yLWFjY2VudC1kYXJrOiAkcGFsZXR0ZS1waW5rLTcwMCAhZGVmYXVsdDtcbiRjb2xvci1wcmltYXJ5LWNvbnRyYXN0OiAkY29sb3ItZGFyay1jb250cmFzdCAhZGVmYXVsdDtcbiRjb2xvci1hY2NlbnQtY29udHJhc3Q6ICRjb2xvci1kYXJrLWNvbnRyYXN0ICFkZWZhdWx0O1xuXG4vLy0tIFNpemluZ1xuJHVuaXQ6IDFyZW0gIWRlZmF1bHQ7XG5cbi8vIC0tIEZvbnRzXG4kcHJlZmVycmVkLWZvbnQ6IFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhXCIsIFwiQXJpYWxcIiwgc2Fucy1zZXJpZiAhZGVmYXVsdDtcbiRmb250LXNpemU6IDEuNiAqICR1bml0ICFkZWZhdWx0O1xuJGZvbnQtc2l6ZS10aW55OiAxLjIgKiAkdW5pdCAhZGVmYXVsdDtcbiRmb250LXNpemUtc21hbGw6IDEuNCAqICR1bml0ICFkZWZhdWx0O1xuJGZvbnQtc2l6ZS1ub3JtYWw6ICRmb250LXNpemUgIWRlZmF1bHQ7XG4kZm9udC1zaXplLWJpZzogMS44ICogJHVuaXQgIWRlZmF1bHQ7XG4kZm9udC13ZWlnaHQtdGhpbjogMzAwICFkZWZhdWx0O1xuJGZvbnQtd2VpZ2h0LW5vcm1hbDogNDAwICFkZWZhdWx0O1xuJGZvbnQtd2VpZ2h0LXNlbWktYm9sZDogNTAwICFkZWZhdWx0O1xuJGZvbnQtd2VpZ2h0LWJvbGQ6IDcwMCAhZGVmYXVsdDtcblxuLy8tLSBTaGFkb3dzXG4kc2hhZG93LWtleS11bWJyYS1vcGFjaXR5OiAwLjIgIWRlZmF1bHQ7XG4kc2hhZG93LWtleS1wZW51bWJyYS1vcGFjaXR5OiAwLjE0ICFkZWZhdWx0O1xuJHNoYWRvdy1hbWJpZW50LXNoYWRvdy1vcGFjaXR5OiAwLjEyICFkZWZhdWx0O1xuXG4vLy0tIERlcHRoIFNoYWRvd3NcbiR6ZGVwdGgtc2hhZG93LTE6IDAgMXB4IDZweCByZ2JhKDAsMCwwLC4xMiksIDAgMXB4IDRweCByZ2JhKDAsMCwwLC4yNCk7XG4kemRlcHRoLXNoYWRvdy0yOiAwIDNweCAxMHB4IHJnYmEoMCwwLDAsLjE2KSwgMCAzcHggMTBweCByZ2JhKDAsMCwwLC4yMyk7XG4kemRlcHRoLXNoYWRvdy0zOiAwIDEwcHggMzBweCByZ2JhKDAsMCwwLC4xOSksIDAgNnB4IDEwcHggcmdiYSgwLDAsMCwuMjMpO1xuJHpkZXB0aC1zaGFkb3ctNDogMCAxNHB4IDQ1cHggcmdiYSgwLDAsMCwuMjUpLCAwIDEwcHggMThweCByZ2JhKDAsMCwwLC4yMik7XG4kemRlcHRoLXNoYWRvdy01OiAwIDE5cHggNjBweCByZ2JhKDAsMCwwLC4zKSwgMCAxNXB4IDIwcHggcmdiYSgwLDAsMCwuMjIpO1xuXG4vLy0tIEFuaW1hdGlvblxuJGFuaW1hdGlvbi1kdXJhdGlvbjogLjM1cztcbiRhbmltYXRpb24tZGVsYXk6ICRhbmltYXRpb24tZHVyYXRpb24gLyA1O1xuJGFuaW1hdGlvbi1jdXJ2ZS1mYXN0LW91dC1zbG93LWluOiBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpICFkZWZhdWx0O1xuJGFuaW1hdGlvbi1jdXJ2ZS1saW5lYXItb3V0LXNsb3ctaW46IGN1YmljLWJlemllcigwLCAwLCAwLjIsIDEpICFkZWZhdWx0O1xuJGFuaW1hdGlvbi1jdXJ2ZS1mYXN0LW91dC1saW5lYXItaW46IGN1YmljLWJlemllcigwLjQsIDAsIDEsIDEpICFkZWZhdWx0O1xuJGFuaW1hdGlvbi1jdXJ2ZS1kZWZhdWx0OiAkYW5pbWF0aW9uLWN1cnZlLWZhc3Qtb3V0LXNsb3ctaW4gIWRlZmF1bHQ7XG5cbi8vLS0gSW5kZXhlc1xuJHotaW5kZXgtaGlnaGVzdDogMzAwICFkZWZhdWx0O1xuJHotaW5kZXgtaGlnaGVyOiAyMDAgIWRlZmF1bHQ7XG4kei1pbmRleC1oaWdoOiAxMDAgIWRlZmF1bHQ7XG4kei1pbmRleC1ub3JtYWw6IDEgIWRlZmF1bHQ7XG4kei1pbmRleC1sb3c6IC0xMDAgIWRlZmF1bHQ7XG4kei1pbmRleC1sb3dlcjogLTIwMCAhZGVmYXVsdDtcblxuLy8tLSBCcmVha3BvaW50c1xuLy8gaGVpZ2h0IG9mIGFwcCBiYXJcbi8vIGh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vZGVzaWduL3NwZWMvbGF5b3V0L21ldHJpY3Mta2V5bGluZXMuaHRtbCNtZXRyaWNzLWtleWxpbmVzLWtleWxpbmVzLXNwYWNpbmdcbiRzdGFuZGFyZC1pbmNyZW1lbnQtbW9iaWxlOiAoNS42ICogJHVuaXQpICFkZWZhdWx0O1xuJHN0YW5kYXJkLWluY3JlbWVudC1kZXNrdG9wOiAoNi40ICogJHVuaXQpICFkZWZhdWx0O1xuXG4vLyBodHRwczovL3d3dy5nb29nbGUuY29tL2Rlc2lnbi9zcGVjL2xheW91dC9tZXRyaWNzLWtleWxpbmVzLmh0bWwjbWV0cmljcy1rZXlsaW5lcy1iYXNlbGluZS1ncmlkc1xuJGJhc2VsaW5lLWdyaWQ6ICgwLjggKiAkdW5pdCkgIWRlZmF1bHQ7XG4kbGF5b3V0LWd1dHRlci13aWR0aC1zbTogKCRiYXNlbGluZS1ncmlkICogMikgIWRlZmF1bHQ7XG4kbGF5b3V0LWd1dHRlci13aWR0aDogKCRiYXNlbGluZS1ncmlkICogMykgIWRlZmF1bHQ7XG5cbi8vIGh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vZGVzaWduL3NwZWMvbGF5b3V0L3Jlc3BvbnNpdmUtdWkuaHRtbCNyZXNwb25zaXZlLXVpLWJyZWFrcG9pbnRzXG4vLyA0IGNvbHVtbnNcbiRsYXlvdXQtYnJlYWtwb2ludC14eHM6IDQ4MHB4ICFkZWZhdWx0O1xuLy8gOCBjb2x1bW5zXG4kbGF5b3V0LWJyZWFrcG9pbnQteHM6IDYwMHB4ICFkZWZhdWx0O1xuLy8gMTIgY29sdW1uc1xuJGxheW91dC1icmVha3BvaW50LXNtLXRhYmxldDogNzIwcHggIWRlZmF1bHQ7XG4kbGF5b3V0LWJyZWFrcG9pbnQtc206IDg0MHB4ICFkZWZhdWx0O1xuJGxheW91dC1icmVha3BvaW50LW1kOiA5NjBweCAhZGVmYXVsdDtcbiRsYXlvdXQtYnJlYWtwb2ludC1sZy10YWJsZXQ6IDEwMjRweCAhZGVmYXVsdDtcbiRsYXlvdXQtYnJlYWtwb2ludC1sZzogMTI4MHB4ICFkZWZhdWx0O1xuJGxheW91dC1icmVha3BvaW50LXhsOiAxNDQwcHggIWRlZmF1bHQ7XG4kbGF5b3V0LWJyZWFrcG9pbnQteHhsOiAxNjAwcHggIWRlZmF1bHQ7XG4kbGF5b3V0LWJyZWFrcG9pbnQteHh4bDogMTkyMHB4ICFkZWZhdWx0O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogd2VicGFjazovLy9+L3JlYWN0LXRvb2xib3gvbGliL34vcmVhY3QtdG9vbGJveC9saWIvX2dsb2JhbHMuc2Nzc1xuICoqLyIsIkBpbXBvcnQgXCJ+cmVhY3QtdG9vbGJveC9saWIvX2NvbG9yc1wiOyBcbiAkdGhlbWUtYnVpbGRpbmc6IHRydWU7XG4kY29sb3ItcHJpbWFyeTogJHBhbGV0dGUtaW5kaWdvLTUwMCAhZGVmYXVsdDtcclxuJGNvbG9yLXByaW1hcnktZGFyazogJHBhbGV0dGUtaW5kaWdvLTcwMCAhZGVmYXVsdDtcclxuJGNvbG9yLWFjY2VudDogJHBhbGV0dGUtcGluay1hMjAwICFkZWZhdWx0O1xyXG4kY29sb3ItYWNjZW50LWRhcms6ICRwYWxldHRlLXBpbmstNzAwICFkZWZhdWx0O1xyXG4kY29sb3ItcHJpbWFyeS1jb250cmFzdDogJGNvbG9yLWRhcmstY29udHJhc3QgIWRlZmF1bHQ7XHJcbiRjb2xvci1hY2NlbnQtY29udHJhc3Q6ICRjb2xvci1kYXJrLWNvbnRyYXN0ICFkZWZhdWx0O1xyXG5cbkBpbXBvcnQgXCIuLi9iYXNlXCI7XG5AaW1wb3J0IFwiLi9jb25maWdcIjtcblxuLmhvcml6b250YWwge1xuICA+IFtkYXRhLXJlYWN0LXRvb2xib3g9XCJidXR0b25cIl0sID4gW2RhdGEtcmVhY3QtdG9vbGJveD1cImxpbmtcIl0ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW46IDAgJG5hdmlnYXRpb24tc3BhY2UgLyAyO1xuICB9XG59XG5cbi52ZXJ0aWNhbCB7XG4gID4gW2RhdGEtcmVhY3QtdG9vbGJveD1cImJ1dHRvblwiXSwgPiBbZGF0YS1yZWFjdC10b29sYm94PVwibGlua1wiXSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAkbmF2aWdhdGlvbi1zcGFjZSAvIDI7XG4gIH1cbn1cblxuLnZlcnRpY2FsLCAuaG9yaXpvbnRhbCB7XG4gIHBhZGRpbmc6ICRuYXZpZ2F0aW9uLXNwYWNlIC8gMjtcblxuICA+IFtkYXRhLXJlYWN0LXRvb2xib3g9XCJsaW5rXCJdIHtcbiAgICBjb2xvcjogJG5hdmlnYXRpb24tY29sb3I7XG4gIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHdlYnBhY2s6Ly8vfi9yZWFjdC10b29sYm94L2xpYi9+L3JlYWN0LXRvb2xib3gvbGliL25hdmlnYXRpb24vc3R5bGUuc2Nzc1xuICoqLyIsIkBpbXBvcnQgXCJ+cmVhY3QtdG9vbGJveC9saWIvX2NvbG9yc1wiOyBcbiAkdGhlbWUtYnVpbGRpbmc6IHRydWU7XG4kY29sb3ItcHJpbWFyeTogJHBhbGV0dGUtaW5kaWdvLTUwMCAhZGVmYXVsdDtcclxuJGNvbG9yLXByaW1hcnktZGFyazogJHBhbGV0dGUtaW5kaWdvLTcwMCAhZGVmYXVsdDtcclxuJGNvbG9yLWFjY2VudDogJHBhbGV0dGUtcGluay1hMjAwICFkZWZhdWx0O1xyXG4kY29sb3ItYWNjZW50LWRhcms6ICRwYWxldHRlLXBpbmstNzAwICFkZWZhdWx0O1xyXG4kY29sb3ItcHJpbWFyeS1jb250cmFzdDogJGNvbG9yLWRhcmstY29udHJhc3QgIWRlZmF1bHQ7XHJcbiRjb2xvci1hY2NlbnQtY29udHJhc3Q6ICRjb2xvci1kYXJrLWNvbnRyYXN0ICFkZWZhdWx0O1xyXG5cbkBpbXBvcnQgXCIuLi9iYXNlXCI7XG5AaW1wb3J0IFwiLi9jb25maWdcIjtcblxuJXJpcHBsZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgei1pbmRleDogJHotaW5kZXgtaGlnaDtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiA1MCUgNTAlO1xufVxuXG4ud3JhcHBlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiAkei1pbmRleC1ub3JtYWw7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4ubm9ybWFsIHtcbiAgQGV4dGVuZCAlcmlwcGxlO1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAkcmlwcGxlLWR1cmF0aW9uO1xuICAmLnJlc3RhcnRpbmcge1xuICAgIG9wYWNpdHk6ICRyaXBwbGUtZmluYWwtb3BhY2l0eTtcbiAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiBub25lO1xuICB9XG4gICYuYWN0aXZlIHtcbiAgICBvcGFjaXR5OiAkcmlwcGxlLWZpbmFsLW9wYWNpdHk7XG4gICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogdHJhbnNmb3JtO1xuICB9XG4gICY6bm90KC5hY3RpdmUpOm5vdCgucmVzdGFydGluZykge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogb3BhY2l0eSwgdHJhbnNmb3JtO1xuICB9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiB3ZWJwYWNrOi8vL34vcmVhY3QtdG9vbGJveC9saWIvfi9yZWFjdC10b29sYm94L2xpYi9yaXBwbGUvc3R5bGUuc2Nzc1xuICoqLyIsIiRyaXBwbGUtZHVyYXRpb246IDgwMG1zICFkZWZhdWx0O1xuJHJpcHBsZS1maW5hbC1vcGFjaXR5OiAuMyAhZGVmYXVsdDtcbiRyaXBwbGUtc2l6ZTogMTUgKiAkdW5pdCAhZGVmYXVsdDtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHdlYnBhY2s6Ly8vfi9yZWFjdC10b29sYm94L2xpYi9+L3JlYWN0LXRvb2xib3gvbGliL3JpcHBsZS9fY29uZmlnLnNjc3NcbiAqKi8iLCJAaW1wb3J0IFwifnJlYWN0LXRvb2xib3gvbGliL19jb2xvcnNcIjsgXG4gJHRoZW1lLWJ1aWxkaW5nOiB0cnVlO1xuJGNvbG9yLXByaW1hcnk6ICRwYWxldHRlLWluZGlnby01MDAgIWRlZmF1bHQ7XHJcbiRjb2xvci1wcmltYXJ5LWRhcms6ICRwYWxldHRlLWluZGlnby03MDAgIWRlZmF1bHQ7XHJcbiRjb2xvci1hY2NlbnQ6ICRwYWxldHRlLXBpbmstYTIwMCAhZGVmYXVsdDtcclxuJGNvbG9yLWFjY2VudC1kYXJrOiAkcGFsZXR0ZS1waW5rLTcwMCAhZGVmYXVsdDtcclxuJGNvbG9yLXByaW1hcnktY29udHJhc3Q6ICRjb2xvci1kYXJrLWNvbnRyYXN0ICFkZWZhdWx0O1xyXG4kY29sb3ItYWNjZW50LWNvbnRyYXN0OiAkY29sb3ItZGFyay1jb250cmFzdCAhZGVmYXVsdDtcclxuXG5AaW1wb3J0IFwiLi4vYmFzZVwiO1xuQGltcG9ydCBcIi4uL21peGluc1wiO1xuQGltcG9ydCBcIi4vY29uZmlnXCI7XG5cbiVidXR0b24ge1xuICBAaW5jbHVkZSB0eXBvLWJ1dHRvbigpO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgaGVpZ2h0OiAkYnV0dG9uLWhlaWdodDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyOiAwO1xuICBvdXRsaW5lOiBub25lO1xuICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IC4ycyAkYW5pbWF0aW9uLWN1cnZlLWZhc3Qtb3V0LWxpbmVhci1pbiwgYmFja2dyb3VuZC1jb2xvciAuMnMgJGFuaW1hdGlvbi1jdXJ2ZS1kZWZhdWx0LCBjb2xvciAuMnMgJGFuaW1hdGlvbi1jdXJ2ZS1kZWZhdWx0O1xuICAmOjotbW96LWZvY3VzLWlubmVyIHtcbiAgICBib3JkZXI6IDA7XG4gIH1cbiAgPiBzcGFuOm5vdChbZGF0YS1yZWFjdC10b29sYm94PVwidG9vbHRpcFwiXSkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBsaW5lLWhlaWdodDogJGJ1dHRvbi1oZWlnaHQ7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgfVxuICA+IHN2ZyB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiAxZW07XG4gICAgaGVpZ2h0OiAkYnV0dG9uLWhlaWdodDtcbiAgICBmb250LXNpemU6IDEyMCU7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICBmaWxsOiBjdXJyZW50Q29sb3I7XG4gIH1cbiAgPiAqIHtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgfVxuICBbZGF0YS1yZWFjdC10b29sYm94PVwicmlwcGxlXCJdIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICB9XG4gICZbZGlzYWJsZWRdIHtcbiAgICBjb2xvcjogJGJ1dHRvbi1kaXNhYmxlZC10ZXh0LWNvbG9yO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIGN1cnNvcjogYXV0bztcbiAgfVxufVxuXG4lc3F1YXJlZCB7XG4gIG1pbi13aWR0aDogJGJ1dHRvbi1zcXVhcmVkLW1pbi13aWR0aDtcbiAgcGFkZGluZzogJGJ1dHRvbi1zcXVhcmVkLXBhZGRpbmc7XG4gIGJvcmRlci1yYWRpdXM6ICRidXR0b24tYm9yZGVyLXJhZGl1cztcbiAgLmljb24ge1xuICAgIG1hcmdpbi1yaWdodDogJGJ1dHRvbi1zcXVhcmVkLWljb24tbWFyZ2luO1xuICAgIGZvbnQtc2l6ZTogMTIwJTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICB9XG4gID4gc3ZnIHtcbiAgICBtYXJnaW4tcmlnaHQ6IC41ICogJHVuaXQ7XG4gIH1cbn1cblxuJXNvbGlkIHtcbiAgJltkaXNhYmxlZF0ge1xuICAgIEBpbmNsdWRlIHNoYWRvdy0yZHAoKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYnV0dG9uLWRpc2FibGVkLWJhY2tncm91bmQtY29sb3I7XG4gIH1cbiAgJjphY3RpdmUge1xuICAgIEBpbmNsdWRlIHNoYWRvdy00ZHAoKTtcbiAgfVxuICAmOmZvY3VzOm5vdCg6YWN0aXZlKSB7XG4gICAgQGluY2x1ZGUgZm9jdXMtc2hhZG93KCk7XG4gIH1cbn1cblxuLnJhaXNlZCB7XG4gIEBleHRlbmQgJWJ1dHRvbjtcbiAgQGV4dGVuZCAlc3F1YXJlZDtcbiAgQGV4dGVuZCAlc29saWQ7XG4gIEBpbmNsdWRlIHNoYWRvdy0yZHAoKTtcbn1cblxuLmZsYXQge1xuICBAZXh0ZW5kICVidXR0b247XG4gIEBleHRlbmQgJXNxdWFyZWQ7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG4uZmxvYXRpbmcge1xuICBAZXh0ZW5kICVidXR0b247XG4gIEBleHRlbmQgJXNvbGlkO1xuICB3aWR0aDogJGJ1dHRvbi1mbG9hdGluZy1oZWlnaHQ7XG4gIGhlaWdodDogJGJ1dHRvbi1mbG9hdGluZy1oZWlnaHQ7XG4gIGZvbnQtc2l6ZTogJGJ1dHRvbi1mbG9hdGluZy1mb250LXNpemU7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYm94LXNoYWRvdzogMCAxcHggMS41cHggMCByZ2JhKDAsIDAsIDAsIC4xMiksIDAgMXB4IDFweCAwIHJnYmEoMCwgMCwgMCwgLjI0KTtcbiAgLmljb24ge1xuICAgIGxpbmUtaGVpZ2h0OiAkYnV0dG9uLWZsb2F0aW5nLWhlaWdodDtcbiAgfVxuICBbZGF0YS1yZWFjdC10b29sYm94PVwicmlwcGxlXCJdIHtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIH1cbiAgJi5taW5pIHtcbiAgICB3aWR0aDogJGJ1dHRvbi1mbG9hdGluZy1taW5pLWhlaWdodDtcbiAgICBoZWlnaHQ6ICRidXR0b24tZmxvYXRpbmctbWluaS1oZWlnaHQ7XG4gICAgZm9udC1zaXplOiAkYnV0dG9uLWZsb2F0aW5nLW1pbmktZm9udC1zaXplO1xuICAgIC5pY29uIHtcbiAgICAgIGxpbmUtaGVpZ2h0OiAkYnV0dG9uLWZsb2F0aW5nLW1pbmktaGVpZ2h0O1xuICAgIH1cbiAgfVxufVxuXG4udG9nZ2xlIHtcbiAgQGV4dGVuZCAlYnV0dG9uO1xuICB3aWR0aDogJGJ1dHRvbi1oZWlnaHQ7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gID4gLmljb24sIHN2ZyB7XG4gICAgZm9udC1zaXplOiAkYnV0dG9uLXRvZ2dsZS1mb250LXNpemU7XG4gICAgbGluZS1oZWlnaHQ6ICRidXR0b24taGVpZ2h0O1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIH1cbiAgW2RhdGEtcmVhY3QtdG9vbGJveD1cInJpcHBsZVwiXSB7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB9XG59XG5cbi5uZXV0cmFsOm5vdChbZGlzYWJsZWRdKSB7XG4gICYucmFpc2VkLCAmLmZsb2F0aW5nIHtcbiAgICBjb2xvcjogJGJ1dHRvbi1uZXV0cmFsLWNvbG9yLWNvbnRyYXN0O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRidXR0b24tbmV1dHJhbC1jb2xvcjtcbiAgfVxuICAmLmZsYXQsICYudG9nZ2xlIHtcbiAgICBjb2xvcjogJGJ1dHRvbi1uZXV0cmFsLWNvbG9yLWNvbnRyYXN0O1xuICAgICY6Zm9jdXM6bm90KDphY3RpdmUpIHtcbiAgICAgIGJhY2tncm91bmQ6ICRidXR0b24tbmV1dHJhbC1jb2xvci1ob3ZlcjtcbiAgICB9XG4gIH1cbiAgJi5mbGF0OmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kOiAkYnV0dG9uLW5ldXRyYWwtY29sb3ItaG92ZXI7XG4gIH1cblxuICAmLmludmVyc2Uge1xuICAgICYucmFpc2VkLCAmLmZsb2F0aW5nIHtcbiAgICAgIGNvbG9yOiAkYnV0dG9uLW5ldXRyYWwtY29sb3I7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYnV0dG9uLW5ldXRyYWwtY29sb3ItY29udHJhc3Q7XG4gICAgfVxuICAgICYuZmxhdCwgJi50b2dnbGUge1xuICAgICAgY29sb3I6ICRidXR0b24tbmV1dHJhbC1jb2xvcjtcbiAgICAgICY6Zm9jdXM6bm90KDphY3RpdmUpIHtcbiAgICAgICAgYmFja2dyb3VuZDogJGJ1dHRvbi1uZXV0cmFsLWNvbG9yLWhvdmVyO1xuICAgICAgfVxuICAgIH1cbiAgICAmLmZsYXQ6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogJGJ1dHRvbi1uZXV0cmFsLWNvbG9yLWhvdmVyO1xuICAgIH1cbiAgfVxufVxuXG5AaW5jbHVkZSBidG4tY29sb3JzKFwicHJpbWFyeVwiLCAkYnV0dG9uLXByaW1hcnktY29sb3ItY29udHJhc3QsICRidXR0b24tcHJpbWFyeS1jb2xvciwgJGJ1dHRvbi1wcmltYXJ5LWNvbG9yLWhvdmVyKTtcbkBpbmNsdWRlIGJ0bi1jb2xvcnMoXCJhY2NlbnRcIiwgJGJ1dHRvbi1hY2NlbnQtY29sb3ItY29udHJhc3QsICRidXR0b24tYWNjZW50LWNvbG9yLCAkYnV0dG9uLWFjY2VudC1jb2xvci1ob3Zlcik7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiB3ZWJwYWNrOi8vL34vcmVhY3QtdG9vbGJveC9saWIvfi9yZWFjdC10b29sYm94L2xpYi9idXR0b24vc3R5bGUuc2Nzc1xuICoqLyIsIi8vIHNjc3MtbGludDpkaXNhYmxlIFZlbmRvclByZWZpeFxuQG1peGluIHR5cG8tcHJlZmVycmVkLWZvbnQoJHVzZS1wcmVmZXJyZWQ6IHRydWUpIHtcbiAgQGlmICR1c2UtcHJlZmVycmVkIHtcbiAgICBmb250LWZhbWlseTogJHByZWZlcnJlZC1mb250O1xuICB9XG59XG5cbkBtaXhpbiB0eXBvLWRpc3BsYXktNCgkY29sb3ItY29udHJhc3Q6IGZhbHNlLCAkdXNlLXByZWZlcnJlZDogdHJ1ZSkge1xuICBAaW5jbHVkZSB0eXBvLXByZWZlcnJlZC1mb250KCR1c2UtcHJlZmVycmVkKTtcbiAgZm9udC1zaXplOiAxMS4ycmVtO1xuICBmb250LXdlaWdodDogMzAwO1xuICBsaW5lLWhlaWdodDogMTtcbiAgbGV0dGVyLXNwYWNpbmc6IC0uMDRlbTtcblxuICBAaWYgJGNvbG9yLWNvbnRyYXN0IHtcbiAgICBvcGFjaXR5OiAuNTQ7XG4gIH1cbn1cblxuQG1peGluIHR5cG8tZGlzcGxheS0zKCRjb2xvci1jb250cmFzdDogZmFsc2UsICR1c2UtcHJlZmVycmVkOiB0cnVlKSB7XG4gIEBpbmNsdWRlIHR5cG8tcHJlZmVycmVkLWZvbnQoJHVzZS1wcmVmZXJyZWQpO1xuICBmb250LXNpemU6IDUuNnJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMzU7XG4gIGxldHRlci1zcGFjaW5nOiAtLjAyZW07XG5cbiAgQGlmICRjb2xvci1jb250cmFzdCB7XG4gICAgb3BhY2l0eTogLjU0O1xuICB9XG59XG5cbkBtaXhpbiB0eXBvLWRpc3BsYXktMigkY29sb3ItY29udHJhc3Q6IGZhbHNlLCAkdXNlLXByZWZlcnJlZDogdHJ1ZSkge1xuICBAaW5jbHVkZSB0eXBvLXByZWZlcnJlZC1mb250KCR1c2UtcHJlZmVycmVkKTtcbiAgZm9udC1zaXplOiA0LjVyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiA0LjhyZW07XG5cbiAgQGlmICRjb2xvci1jb250cmFzdCB7XG4gICAgb3BhY2l0eTogLjU0O1xuICB9XG59XG5cbkBtaXhpbiB0eXBvLWRpc3BsYXktMSgkY29sb3ItY29udHJhc3Q6IGZhbHNlLCAkdXNlLXByZWZlcnJlZDogdHJ1ZSkge1xuICBAaW5jbHVkZSB0eXBvLXByZWZlcnJlZC1mb250KCR1c2UtcHJlZmVycmVkKTtcbiAgZm9udC1zaXplOiAzLjRyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiA0cmVtO1xuXG4gIEBpZiAkY29sb3ItY29udHJhc3Qge1xuICAgIG9wYWNpdHk6IC41NDtcbiAgfVxufVxuXG5AbWl4aW4gdHlwby1oZWFkbGluZSgkY29sb3ItY29udHJhc3Q6IGZhbHNlLCAkdXNlLXByZWZlcnJlZDogdHJ1ZSkge1xuICBAaW5jbHVkZSB0eXBvLXByZWZlcnJlZC1mb250KCR1c2UtcHJlZmVycmVkKTtcbiAgZm9udC1zaXplOiAyLjRyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAzLjJyZW07XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG5cbiAgQGlmICRjb2xvci1jb250cmFzdCB7XG4gICAgb3BhY2l0eTogLjg3O1xuICB9XG59XG5cbkBtaXhpbiB0eXBvLXRpdGxlKCRjb2xvci1jb250cmFzdDogZmFsc2UsICR1c2UtcHJlZmVycmVkOiB0cnVlKSB7XG4gIEBpbmNsdWRlIHR5cG8tcHJlZmVycmVkLWZvbnQoJHVzZS1wcmVmZXJyZWQpO1xuICBmb250LXNpemU6IDJyZW07XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBsZXR0ZXItc3BhY2luZzogLjAyZW07XG5cbiAgQGlmICRjb2xvci1jb250cmFzdCB7XG4gICAgb3BhY2l0eTogLjg3O1xuICB9XG59XG5cbkBtaXhpbiB0eXBvLXN1YmhlYWQoJGNvbG9yLWNvbnRyYXN0OiBmYWxzZSwgJHVzZS1wcmVmZXJyZWQ6IHRydWUpIHtcbiAgQGluY2x1ZGUgdHlwby1wcmVmZXJyZWQtZm9udCgkdXNlLXByZWZlcnJlZCk7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMi40cmVtO1xuICBsZXR0ZXItc3BhY2luZzogLjA0ZW07XG5cbiAgQGlmICRjb2xvci1jb250cmFzdCB7XG4gICAgb3BhY2l0eTogLjg3O1xuICB9XG59XG5cbkBtaXhpbiB0eXBvLXN1YmhlYWQtMigkY29sb3ItY29udHJhc3Q6IGZhbHNlLCAkdXNlLXByZWZlcnJlZDogdHJ1ZSkge1xuICBAaW5jbHVkZSB0eXBvLXByZWZlcnJlZC1mb250KCR1c2UtcHJlZmVycmVkKTtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAyLjhyZW07XG4gIGxldHRlci1zcGFjaW5nOiAuMDRlbTtcblxuICBAaWYgJGNvbG9yLWNvbnRyYXN0IHtcbiAgICBvcGFjaXR5OiAuODc7XG4gIH1cbn1cblxuQG1peGluIHR5cG8tYm9keS0yKCRjb2xvci1jb250cmFzdDogZmFsc2UsICR1c2UtcHJlZmVycmVkOiBmYWxzZSkge1xuICBAaW5jbHVkZSB0eXBvLXByZWZlcnJlZC1mb250KCR1c2UtcHJlZmVycmVkKTtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIGxpbmUtaGVpZ2h0OiAyLjRyZW07XG4gIGxldHRlci1zcGFjaW5nOiAwO1xuXG4gIEBpZiAkdXNlLXByZWZlcnJlZCB7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgfSBAZWxzZSB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cblxuICBAaWYgJGNvbG9yLWNvbnRyYXN0IHtcbiAgICBvcGFjaXR5OiAuODc7XG4gIH1cbn1cblxuQG1peGluIHR5cG8tYm9keS0xKCRjb2xvci1jb250cmFzdDogZmFsc2UsICR1c2UtcHJlZmVycmVkOiBmYWxzZSkge1xuICBAaW5jbHVkZSB0eXBvLXByZWZlcnJlZC1mb250KCR1c2UtcHJlZmVycmVkKTtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAyLjRyZW07XG4gIGxldHRlci1zcGFjaW5nOiAwO1xuXG4gIEBpZiAkY29sb3ItY29udHJhc3Qge1xuICAgIG9wYWNpdHk6IC44NztcbiAgfVxufVxuXG5AbWl4aW4gdHlwby1jYXB0aW9uKCRjb2xvci1jb250cmFzdDogZmFsc2UsICR1c2UtcHJlZmVycmVkOiBmYWxzZSkge1xuICBAaW5jbHVkZSB0eXBvLXByZWZlcnJlZC1mb250KCR1c2UtcHJlZmVycmVkKTtcbiAgZm9udC1zaXplOiAxLjJyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBsZXR0ZXItc3BhY2luZzogMDtcblxuICBAaWYgJGNvbG9yLWNvbnRyYXN0IHtcbiAgICBvcGFjaXR5OiAuNTQ7XG4gIH1cbn1cblxuQG1peGluIHR5cG8tYmxvY2txdW90ZSgkY29sb3ItY29udHJhc3Q6IGZhbHNlLCAkdXNlLXByZWZlcnJlZDogdHJ1ZSkge1xuICBAaW5jbHVkZSB0eXBvLXByZWZlcnJlZC1mb250KCR1c2UtcHJlZmVycmVkKTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXNpemU6IDIuNHJlbTtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBmb250LXdlaWdodDogMzAwO1xuICBsaW5lLWhlaWdodDogMS4zNTtcbiAgbGV0dGVyLXNwYWNpbmc6IC4wOGVtO1xuXG4gICY6YmVmb3JlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogLS41ZW07XG4gICAgY29udGVudDogXCLigJxcIjtcbiAgfVxuXG4gICY6YWZ0ZXIge1xuICAgIG1hcmdpbi1sZWZ0OiAtLjA1ZW07XG4gICAgY29udGVudDogXCLigJ1cIjtcbiAgfVxuXG4gIEBpZiAkY29sb3ItY29udHJhc3Qge1xuICAgIG9wYWNpdHk6IC41NDtcbiAgfVxufVxuXG5AbWl4aW4gdHlwby1tZW51KCRjb2xvci1jb250cmFzdDogZmFsc2UsICR1c2UtcHJlZmVycmVkOiB0cnVlKSB7XG4gIEBpbmNsdWRlIHR5cG8tcHJlZmVycmVkLWZvbnQoJHVzZS1wcmVmZXJyZWQpO1xuICBmb250LXNpemU6IDEuNHJlbTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIGxldHRlci1zcGFjaW5nOiAwO1xuXG4gIEBpZiAkY29sb3ItY29udHJhc3Qge1xuICAgIG9wYWNpdHk6IC44NztcbiAgfVxufVxuXG5AbWl4aW4gdHlwby1idXR0b24oJGNvbG9yLWNvbnRyYXN0OiBmYWxzZSwgJHVzZS1wcmVmZXJyZWQ6IHRydWUpIHtcbiAgQGluY2x1ZGUgdHlwby1wcmVmZXJyZWQtZm9udCgkdXNlLXByZWZlcnJlZCk7XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xuICBmb250LXdlaWdodDogNTAwO1xuICBsaW5lLWhlaWdodDogMTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XG5cbiAgQGlmICRjb2xvci1jb250cmFzdCB7XG4gICAgb3BhY2l0eTogLjg3O1xuICB9XG59XG5cbi8vLS0gU2hhZG93c1xuQG1peGluIGZvY3VzLXNoYWRvdygpIHtcbiAgYm94LXNoYWRvdzogMCAwIDhweCByZ2JhKDAsIDAsIDAsIC4xOCksIDAgOHB4IDE2cHggcmdiYSgwLCAwLCAwLCAuMzYpO1xufVxuXG5AbWl4aW4gc2hhZG93LTJkcCgpIHtcbiAgYm94LXNoYWRvdzogMCAycHggMnB4IDAgcmdiYSgwLCAwLCAwLCAkc2hhZG93LWtleS1wZW51bWJyYS1vcGFjaXR5KSxcbiAgICAgICAgICAgICAgICAwIDNweCAxcHggLTJweCByZ2JhKDAsIDAsIDAsICRzaGFkb3cta2V5LXVtYnJhLW9wYWNpdHkpLFxuICAgICAgICAgICAgICAgIDAgMXB4IDVweCAwIHJnYmEoMCwgMCwgMCwgJHNoYWRvdy1hbWJpZW50LXNoYWRvdy1vcGFjaXR5KTtcbn1cblxuQG1peGluIHNoYWRvdy0zZHAoKSB7XG4gIGJveC1zaGFkb3c6IDAgM3B4IDRweCAwIHJnYmEoMCwgMCwgMCwgJHNoYWRvdy1rZXktcGVudW1icmEtb3BhY2l0eSksXG4gICAgICAgICAgICAgICAgMCAzcHggM3B4IC0ycHggcmdiYSgwLCAwLCAwLCAkc2hhZG93LWtleS11bWJyYS1vcGFjaXR5KSxcbiAgICAgICAgICAgICAgICAwIDFweCA4cHggMCByZ2JhKDAsIDAsIDAsICRzaGFkb3ctYW1iaWVudC1zaGFkb3ctb3BhY2l0eSk7XG59XG5cbkBtaXhpbiBzaGFkb3ctNGRwKCkge1xuICBib3gtc2hhZG93OiAwIDRweCA1cHggMCByZ2JhKDAsIDAsIDAsICRzaGFkb3cta2V5LXBlbnVtYnJhLW9wYWNpdHkpLFxuICAgICAgICAgICAgICAgIDAgMXB4IDEwcHggMCByZ2JhKDAsIDAsIDAsICRzaGFkb3ctYW1iaWVudC1zaGFkb3ctb3BhY2l0eSksXG4gICAgICAgICAgICAgICAgMCAycHggNHB4IC0xcHggcmdiYSgwLCAwLCAwLCAkc2hhZG93LWtleS11bWJyYS1vcGFjaXR5KTtcbn1cblxuQG1peGluIHNoYWRvdy02ZHAoKSB7XG4gIGJveC1zaGFkb3c6IDAgNnB4IDEwcHggMCByZ2JhKDAsIDAsIDAsICRzaGFkb3cta2V5LXBlbnVtYnJhLW9wYWNpdHkpLFxuICAgICAgICAgICAgICAgIDAgMXB4IDE4cHggMCByZ2JhKDAsIDAsIDAsICRzaGFkb3ctYW1iaWVudC1zaGFkb3ctb3BhY2l0eSksXG4gICAgICAgICAgICAgICAgMCAzcHggNXB4IC0xcHggcmdiYSgwLCAwLCAwLCAkc2hhZG93LWtleS11bWJyYS1vcGFjaXR5KTtcbn1cblxuQG1peGluIHNoYWRvdy04ZHAoKSB7XG4gIGJveC1zaGFkb3c6IDAgOHB4IDEwcHggMXB4IHJnYmEoMCwgMCwgMCwgJHNoYWRvdy1rZXktcGVudW1icmEtb3BhY2l0eSksXG4gICAgICAgICAgICAgICAgMCAzcHggMTRweCAycHggcmdiYSgwLCAwLCAwLCAkc2hhZG93LWFtYmllbnQtc2hhZG93LW9wYWNpdHkpLFxuICAgICAgICAgICAgICAgIDAgNXB4IDVweCAtM3B4IHJnYmEoMCwgMCwgMCwgJHNoYWRvdy1rZXktdW1icmEtb3BhY2l0eSk7XG59XG5cbkBtaXhpbiBzaGFkb3ctMTZkcCgpIHtcbiAgYm94LXNoYWRvdzogMCAxNnB4IDI0cHggMnB4IHJnYmEoMCwgMCwgMCwgJHNoYWRvdy1rZXktcGVudW1icmEtb3BhY2l0eSksXG4gICAgICAgICAgICAgICAgMCA2cHggMzBweCA1cHggcmdiYSgwLCAwLCAwLCAkc2hhZG93LWFtYmllbnQtc2hhZG93LW9wYWNpdHkpLFxuICAgICAgICAgICAgICAgIDAgOHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsICRzaGFkb3cta2V5LXVtYnJhLW9wYWNpdHkpO1xufVxuXG4vLy0tIEFuaW1hdGlvbnNcbkBtaXhpbiBtYXRlcmlhbC1hbmltYXRpb24tZmFzdC1vdXQtc2xvdy1pbigkZHVyYXRpb246IC4ycykge1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogJGFuaW1hdGlvbi1jdXJ2ZS1mYXN0LW91dC1zbG93LWluO1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAkZHVyYXRpb247XG59XG5cbkBtaXhpbiBtYXRlcmlhbC1hbmltYXRpb24tbGluZWFyLW91dC1zbG93LWluKCRkdXJhdGlvbjogLjJzKSB7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiAkYW5pbWF0aW9uLWN1cnZlLWxpbmVhci1vdXQtc2xvdy1pbjtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogJGR1cmF0aW9uO1xufVxuXG5AbWl4aW4gbWF0ZXJpYWwtYW5pbWF0aW9uLWZhc3Qtb3V0LWxpbmVhci1pbigkZHVyYXRpb246IC4ycykge1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogJGFuaW1hdGlvbi1jdXJ2ZS1mYXN0LW91dC1saW5lYXItaW47XG4gIHRyYW5zaXRpb24tZHVyYXRpb246ICRkdXJhdGlvbjtcbn1cblxuQG1peGluIG1hdGVyaWFsLWFuaW1hdGlvbi1kZWZhdWx0KCRkdXJhdGlvbjogLjJzKSB7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiAkYW5pbWF0aW9uLWN1cnZlLWRlZmF1bHQ7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246ICRkdXJhdGlvbjtcbn1cblxuQG1peGluIG5vLXdlYmtpdC1zY3JvbGxiYXIge1xuICAmOjotd2Via2l0LXNjcm9sbGJhciB7XG4gICAgd2lkdGg6IDA7XG4gICAgaGVpZ2h0OiAwO1xuICB9XG59XG5cbkBtaXhpbiBidG4tY29sb3JzKCRuYW1lLCAkY29sb3IsICRiYWNrZ3JvdW5kLCAkaG92ZXIpIHtcbiAgLiN7JG5hbWV9Om5vdChbZGlzYWJsZWRdKSB7XG4gICAgJi5yYWlzZWQsICYuZmxvYXRpbmcge1xuICAgICAgY29sb3I6ICRjb2xvcjtcbiAgICAgIGJhY2tncm91bmQ6ICRiYWNrZ3JvdW5kO1xuICAgIH1cbiAgICAmLmZsYXQsICYudG9nZ2xlIHtcbiAgICAgIGNvbG9yOiAkYmFja2dyb3VuZDtcbiAgICAgICY6Zm9jdXM6bm90KDphY3RpdmUpIHtcbiAgICAgICAgYmFja2dyb3VuZDogJGhvdmVyO1xuICAgICAgfVxuICAgIH1cbiAgICAmLmZsYXQ6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogJGhvdmVyO1xuICAgIH1cbiAgfVxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogd2VicGFjazovLy9+L3JlYWN0LXRvb2xib3gvbGliL34vcmVhY3QtdG9vbGJveC9saWIvX21peGlucy5zY3NzXG4gKiovIiwiJGJ1dHRvbi1uZXV0cmFsLWNvbG9yOiAkY29sb3Itd2hpdGUgIWRlZmF1bHQ7XG4kYnV0dG9uLW5ldXRyYWwtY29sb3ItY29udHJhc3Q6ICRwYWxldHRlLWdyZXktOTAwICFkZWZhdWx0O1xuJGJ1dHRvbi1uZXV0cmFsLWNvbG9yLWhvdmVyOiByZ2JhKCRwYWxldHRlLWdyZXktOTAwLCAuMikgIWRlZmF1bHQ7XG4kYnV0dG9uLXByaW1hcnktY29sb3ItY29udHJhc3Q6ICRjb2xvci1wcmltYXJ5LWNvbnRyYXN0ICFkZWZhdWx0O1xuJGJ1dHRvbi1wcmltYXJ5LWNvbG9yLWhvdmVyOiByZ2JhKCRjb2xvci1wcmltYXJ5LCAuMikgIWRlZmF1bHQ7XG4kYnV0dG9uLXByaW1hcnktY29sb3I6ICRjb2xvci1wcmltYXJ5ICFkZWZhdWx0O1xuJGJ1dHRvbi1hY2NlbnQtY29sb3ItY29udHJhc3Q6ICRjb2xvci1wcmltYXJ5LWNvbnRyYXN0ICFkZWZhdWx0O1xuJGJ1dHRvbi1hY2NlbnQtY29sb3ItaG92ZXI6IHJnYmEoJGNvbG9yLWFjY2VudCwgLjIpICFkZWZhdWx0O1xuJGJ1dHRvbi1hY2NlbnQtY29sb3I6ICRjb2xvci1hY2NlbnQgIWRlZmF1bHQ7XG4kYnV0dG9uLWRpc2FibGVkLXRleHQtY29sb3I6IHJnYmEoJGNvbG9yLWJsYWNrLCAwLjI2KSAhZGVmYXVsdDtcbiRidXR0b24tZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkY29sb3ItYmxhY2ssIDAuMTIpICFkZWZhdWx0O1xuJGJ1dHRvbi1ib3JkZXItcmFkaXVzOiAwLjIgKiAkdW5pdCAhZGVmYXVsdDtcbiRidXR0b24tZmxvYXRpbmctZm9udC1zaXplOiAkdW5pdCAqIDIuNCAhZGVmYXVsdDtcbiRidXR0b24tZmxvYXRpbmctaGVpZ2h0OiAkdW5pdCAqIDUuNiAhZGVmYXVsdDtcbiRidXR0b24tZmxvYXRpbmctbWluaS1oZWlnaHQ6ICR1bml0ICogNCAhZGVmYXVsdDtcbiRidXR0b24tZmxvYXRpbmctbWluaS1mb250LXNpemU6ICRidXR0b24tZmxvYXRpbmctbWluaS1oZWlnaHQgLyAyLjI1ICFkZWZhdWx0O1xuJGJ1dHRvbi1oZWlnaHQ6ICR1bml0ICogMy42ICFkZWZhdWx0O1xuJGJ1dHRvbi1zcXVhcmVkLWljb24tbWFyZ2luOiAkdW5pdCAqIC42ICFkZWZhdWx0O1xuJGJ1dHRvbi1zcXVhcmVkLW1pbi13aWR0aDogOSAqICR1bml0ICFkZWZhdWx0O1xuJGJ1dHRvbi1zcXVhcmVkLXBhZGRpbmc6IDAgJHVuaXQgKiAxLjIgIWRlZmF1bHQ7XG4kYnV0dG9uLXRvZ2dsZS1mb250LXNpemU6ICR1bml0ICogMiAhZGVmYXVsdDtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHdlYnBhY2s6Ly8vfi9yZWFjdC10b29sYm94L2xpYi9+L3JlYWN0LXRvb2xib3gvbGliL2J1dHRvbi9fY29uZmlnLnNjc3NcbiAqKi8iLCIucmFpc2VkLCAuZmxhdCwgLmZsb2F0aW5nLCAudG9nZ2xlIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhXCIsIFwiQXJpYWxcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsZXR0ZXItc3BhY2luZzogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGhlaWdodDogMy42cmVtO1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3JkZXI6IDA7XG4gIG91dGxpbmU6IG5vbmU7XG4gIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMC4ycyBjdWJpYy1iZXppZXIoMC40LCAwLCAxLCAxKSwgYmFja2dyb3VuZC1jb2xvciAwLjJzIGN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSksIGNvbG9yIDAuMnMgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKTsgfVxuICAucmFpc2VkOjotbW96LWZvY3VzLWlubmVyLCAuZmxhdDo6LW1vei1mb2N1cy1pbm5lciwgLmZsb2F0aW5nOjotbW96LWZvY3VzLWlubmVyLCAudG9nZ2xlOjotbW96LWZvY3VzLWlubmVyIHtcbiAgICBib3JkZXI6IDA7IH1cbiAgLnJhaXNlZCA+IHNwYW46bm90KFtkYXRhLXJlYWN0LXRvb2xib3g9XCJ0b29sdGlwXCJdKSwgLmZsYXQgPiBzcGFuOm5vdChbZGF0YS1yZWFjdC10b29sYm94PVwidG9vbHRpcFwiXSksIC5mbG9hdGluZyA+IHNwYW46bm90KFtkYXRhLXJlYWN0LXRvb2xib3g9XCJ0b29sdGlwXCJdKSwgLnRvZ2dsZSA+IHNwYW46bm90KFtkYXRhLXJlYWN0LXRvb2xib3g9XCJ0b29sdGlwXCJdKSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGxpbmUtaGVpZ2h0OiAzLjZyZW07XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuICAucmFpc2VkID4gc3ZnLCAuZmxhdCA+IHN2ZywgLmZsb2F0aW5nID4gc3ZnLCAudG9nZ2xlID4gc3ZnIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDFlbTtcbiAgICBoZWlnaHQ6IDMuNnJlbTtcbiAgICBmb250LXNpemU6IDEyMCU7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICBmaWxsOiBjdXJyZW50Q29sb3I7IH1cbiAgLnJhaXNlZCA+ICosIC5mbGF0ID4gKiwgLmZsb2F0aW5nID4gKiwgLnRvZ2dsZSA+ICoge1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lOyB9XG4gIC5yYWlzZWQgW2RhdGEtcmVhY3QtdG9vbGJveD1cInJpcHBsZVwiXSwgLmZsYXQgW2RhdGEtcmVhY3QtdG9vbGJveD1cInJpcHBsZVwiXSwgLmZsb2F0aW5nIFtkYXRhLXJlYWN0LXRvb2xib3g9XCJyaXBwbGVcIl0sIC50b2dnbGUgW2RhdGEtcmVhY3QtdG9vbGJveD1cInJpcHBsZVwiXSB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICBbZGlzYWJsZWRdLnJhaXNlZCwgW2Rpc2FibGVkXS5mbGF0LCBbZGlzYWJsZWRdLmZsb2F0aW5nLCBbZGlzYWJsZWRdLnRvZ2dsZSB7XG4gICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yNik7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgY3Vyc29yOiBhdXRvOyB9XG5cbi5yYWlzZWQsIC5mbGF0IHtcbiAgbWluLXdpZHRoOiA5cmVtO1xuICBwYWRkaW5nOiAwIDEuMnJlbTtcbiAgYm9yZGVyLXJhZGl1czogMC4ycmVtOyB9XG4gIC5yYWlzZWQgLmljb24sIC5mbGF0IC5pY29uIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDAuNnJlbTtcbiAgICBmb250LXNpemU6IDEyMCU7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuICAucmFpc2VkID4gc3ZnLCAuZmxhdCA+IHN2ZyB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwLjVyZW07IH1cblxuW2Rpc2FibGVkXS5yYWlzZWQsIFtkaXNhYmxlZF0uZmxvYXRpbmcge1xuICBib3gtc2hhZG93OiAwIDJweCAycHggMCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDNweCAxcHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMiksIDAgMXB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4xMik7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLnJhaXNlZDphY3RpdmUsIC5mbG9hdGluZzphY3RpdmUge1xuICBib3gtc2hhZG93OiAwIDRweCA1cHggMCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDFweCAxMHB4IDAgcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAycHggNHB4IC0xcHggcmdiYSgwLCAwLCAwLCAwLjIpOyB9XG5cbi5yYWlzZWQ6Zm9jdXM6bm90KDphY3RpdmUpLCAuZmxvYXRpbmc6Zm9jdXM6bm90KDphY3RpdmUpIHtcbiAgYm94LXNoYWRvdzogMCAwIDhweCByZ2JhKDAsIDAsIDAsIDAuMTgpLCAwIDhweCAxNnB4IHJnYmEoMCwgMCwgMCwgMC4zNik7IH1cblxuLnJhaXNlZCB7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgM3B4IDFweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMCAxcHggNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuXG4uZmxhdCB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OyB9XG5cbi5mbG9hdGluZyB7XG4gIHdpZHRoOiA1LjZyZW07XG4gIGhlaWdodDogNS42cmVtO1xuICBmb250LXNpemU6IDIuNHJlbTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBib3gtc2hhZG93OiAwIDFweCAxLjVweCAwIHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMXB4IDFweCAwIHJnYmEoMCwgMCwgMCwgMC4yNCk7IH1cbiAgLmZsb2F0aW5nIC5pY29uIHtcbiAgICBsaW5lLWhlaWdodDogNS42cmVtOyB9XG4gIC5mbG9hdGluZyBbZGF0YS1yZWFjdC10b29sYm94PVwicmlwcGxlXCJdIHtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7IH1cbiAgLmZsb2F0aW5nLm1pbmkge1xuICAgIHdpZHRoOiA0cmVtO1xuICAgIGhlaWdodDogNHJlbTtcbiAgICBmb250LXNpemU6IDEuNzc3NzhyZW07IH1cbiAgICAuZmxvYXRpbmcubWluaSAuaWNvbiB7XG4gICAgICBsaW5lLWhlaWdodDogNHJlbTsgfVxuXG4udG9nZ2xlIHtcbiAgd2lkdGg6IDMuNnJlbTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTsgfVxuICAudG9nZ2xlID4gLmljb24sIC50b2dnbGUgc3ZnIHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgbGluZS1oZWlnaHQ6IDMuNnJlbTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gIC50b2dnbGUgW2RhdGEtcmVhY3QtdG9vbGJveD1cInJpcHBsZVwiXSB7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlOyB9XG5cbi5uZXV0cmFsOm5vdChbZGlzYWJsZWRdKS5yYWlzZWQsIC5uZXV0cmFsOm5vdChbZGlzYWJsZWRdKS5mbG9hdGluZyB7XG4gIGNvbG9yOiAjMjEyMTIxO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgfVxuXG4ubmV1dHJhbDpub3QoW2Rpc2FibGVkXSkuZmxhdCwgLm5ldXRyYWw6bm90KFtkaXNhYmxlZF0pLnRvZ2dsZSB7XG4gIGNvbG9yOiAjMjEyMTIxOyB9XG4gIC5uZXV0cmFsOm5vdChbZGlzYWJsZWRdKS5mbGF0OmZvY3VzOm5vdCg6YWN0aXZlKSwgLm5ldXRyYWw6bm90KFtkaXNhYmxlZF0pLnRvZ2dsZTpmb2N1czpub3QoOmFjdGl2ZSkge1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMzMsIDMzLCAzMywgMC4yKTsgfVxuXG4ubmV1dHJhbDpub3QoW2Rpc2FibGVkXSkuZmxhdDpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMzMsIDMzLCAzMywgMC4yKTsgfVxuXG4ubmV1dHJhbDpub3QoW2Rpc2FibGVkXSkuaW52ZXJzZS5yYWlzZWQsIC5uZXV0cmFsOm5vdChbZGlzYWJsZWRdKS5pbnZlcnNlLmZsb2F0aW5nIHtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjEyMTIxOyB9XG5cbi5uZXV0cmFsOm5vdChbZGlzYWJsZWRdKS5pbnZlcnNlLmZsYXQsIC5uZXV0cmFsOm5vdChbZGlzYWJsZWRdKS5pbnZlcnNlLnRvZ2dsZSB7XG4gIGNvbG9yOiB3aGl0ZTsgfVxuICAubmV1dHJhbDpub3QoW2Rpc2FibGVkXSkuaW52ZXJzZS5mbGF0OmZvY3VzOm5vdCg6YWN0aXZlKSwgLm5ldXRyYWw6bm90KFtkaXNhYmxlZF0pLmludmVyc2UudG9nZ2xlOmZvY3VzOm5vdCg6YWN0aXZlKSB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgzMywgMzMsIDMzLCAwLjIpOyB9XG5cbi5uZXV0cmFsOm5vdChbZGlzYWJsZWRdKS5pbnZlcnNlLmZsYXQ6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDMzLCAzMywgMzMsIDAuMik7IH1cblxuLnByaW1hcnk6bm90KFtkaXNhYmxlZF0pLnJhaXNlZCwgLnByaW1hcnk6bm90KFtkaXNhYmxlZF0pLmZsb2F0aW5nIHtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kOiAjM2Y1MWI1OyB9XG5cbi5wcmltYXJ5Om5vdChbZGlzYWJsZWRdKS5mbGF0LCAucHJpbWFyeTpub3QoW2Rpc2FibGVkXSkudG9nZ2xlIHtcbiAgY29sb3I6ICMzZjUxYjU7IH1cbiAgLnByaW1hcnk6bm90KFtkaXNhYmxlZF0pLmZsYXQ6Zm9jdXM6bm90KDphY3RpdmUpLCAucHJpbWFyeTpub3QoW2Rpc2FibGVkXSkudG9nZ2xlOmZvY3VzOm5vdCg6YWN0aXZlKSB7XG4gICAgYmFja2dyb3VuZDogcmdiYSg2MywgODEsIDE4MSwgMC4yKTsgfVxuXG4ucHJpbWFyeTpub3QoW2Rpc2FibGVkXSkuZmxhdDpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHJnYmEoNjMsIDgxLCAxODEsIDAuMik7IH1cblxuLmFjY2VudDpub3QoW2Rpc2FibGVkXSkucmFpc2VkLCAuYWNjZW50Om5vdChbZGlzYWJsZWRdKS5mbG9hdGluZyB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZDogI2ZmNDA4MTsgfVxuXG4uYWNjZW50Om5vdChbZGlzYWJsZWRdKS5mbGF0LCAuYWNjZW50Om5vdChbZGlzYWJsZWRdKS50b2dnbGUge1xuICBjb2xvcjogI2ZmNDA4MTsgfVxuICAuYWNjZW50Om5vdChbZGlzYWJsZWRdKS5mbGF0OmZvY3VzOm5vdCg6YWN0aXZlKSwgLmFjY2VudDpub3QoW2Rpc2FibGVkXSkudG9nZ2xlOmZvY3VzOm5vdCg6YWN0aXZlKSB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDY0LCAxMjksIDAuMik7IH1cblxuLmFjY2VudDpub3QoW2Rpc2FibGVkXSkuZmxhdDpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCA2NCwgMTI5LCAwLjIpOyB9XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiB3ZWJwYWNrOi8vL34vcmVhY3QtdG9vbGJveC9saWIvYnV0dG9uL3N0eWxlLnNjc3NcbiAqKi8iLCJAaW1wb3J0IFwifnJlYWN0LXRvb2xib3gvbGliL19jb2xvcnNcIjsgXG4gJHRoZW1lLWJ1aWxkaW5nOiB0cnVlO1xuJGNvbG9yLXByaW1hcnk6ICRwYWxldHRlLWluZGlnby01MDAgIWRlZmF1bHQ7XHJcbiRjb2xvci1wcmltYXJ5LWRhcms6ICRwYWxldHRlLWluZGlnby03MDAgIWRlZmF1bHQ7XHJcbiRjb2xvci1hY2NlbnQ6ICRwYWxldHRlLXBpbmstYTIwMCAhZGVmYXVsdDtcclxuJGNvbG9yLWFjY2VudC1kYXJrOiAkcGFsZXR0ZS1waW5rLTcwMCAhZGVmYXVsdDtcclxuJGNvbG9yLXByaW1hcnktY29udHJhc3Q6ICRjb2xvci1kYXJrLWNvbnRyYXN0ICFkZWZhdWx0O1xyXG4kY29sb3ItYWNjZW50LWNvbnRyYXN0OiAkY29sb3ItZGFyay1jb250cmFzdCAhZGVmYXVsdDtcclxuXG5AaW1wb3J0IFwiLi4vYmFzZVwiO1xuXG4uaWNvbiB7XG4gIG1hcmdpbi1yaWdodDogJHVuaXQ7XG4gIGZvbnQtc2l6ZTogMS44ICogJHVuaXQ7XG59XG5cbi5yb290IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgJGFuaW1hdGlvbi1kdXJhdGlvbiAkYW5pbWF0aW9uLWN1cnZlLWRlZmF1bHQ7XG4gICY6bm90KC5hY3RpdmUpIHtcbiAgICBvcGFjaXR5OiAuNTtcbiAgfVxuICAmOmhvdmVyLCAmOmFjdGl2ZSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICA+ICoge1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIH1cbiAgPiBhYmJyIHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgfVxuICA+IHNtYWxsIHtcbiAgICBtYXJnaW4tbGVmdDogLjggKiAkdW5pdDtcbiAgICBmb250LXNpemU6ICRmb250LXNpemUtdGlueTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHdlYnBhY2s6Ly8vfi9yZWFjdC10b29sYm94L2xpYi9+L3JlYWN0LXRvb2xib3gvbGliL2xpbmsvc3R5bGUuc2Nzc1xuICoqLyIsIkBpbXBvcnQgXCJ+cmVhY3QtdG9vbGJveC9saWIvX2NvbG9yc1wiOyBcbiAkdGhlbWUtYnVpbGRpbmc6IHRydWU7XG4kY29sb3ItcHJpbWFyeTogJHBhbGV0dGUtaW5kaWdvLTUwMCAhZGVmYXVsdDtcclxuJGNvbG9yLXByaW1hcnktZGFyazogJHBhbGV0dGUtaW5kaWdvLTcwMCAhZGVmYXVsdDtcclxuJGNvbG9yLWFjY2VudDogJHBhbGV0dGUtcGluay1hMjAwICFkZWZhdWx0O1xyXG4kY29sb3ItYWNjZW50LWRhcms6ICRwYWxldHRlLXBpbmstNzAwICFkZWZhdWx0O1xyXG4kY29sb3ItcHJpbWFyeS1jb250cmFzdDogJGNvbG9yLWRhcmstY29udHJhc3QgIWRlZmF1bHQ7XHJcbiRjb2xvci1hY2NlbnQtY29udHJhc3Q6ICRjb2xvci1kYXJrLWNvbnRyYXN0ICFkZWZhdWx0O1xyXG5cbkBpbXBvcnQgXCJ+cmVhY3QtdG9vbGJveC9saWIvYmFzZVwiO1xyXG5AaW1wb3J0IFwifnJlYWN0LXRvb2xib3gvbGliL2FwcF9iYXIvY29uZmlnXCI7XHJcbkBpbXBvcnQgXCJ+cmVhY3QtdG9vbGJveC9saWIvYnV0dG9uL2NvbmZpZ1wiO1xyXG4kdGl0bGUtZm9udC1zaXplOiAxLjggKiAkdW5pdDtcclxuXHJcbi8vIFlvdSBuZWVkIHRvIGJvb3N0IHByaW9yaXR5IG1vcmUgdGhhbiB0aGUgbWluaW11bSBzaW5jZVxyXG4vLyB5b3VyIGJ1aWxkIGNvbWVzIHdpdGggUmVhY3QgVG9vbGJveCdzIGFuZCB3ZSBjYW4ndFxyXG4vLyBlbnN1cmUgdGhlIG9yZGVyLiBZb3UgY2FuIGVpdGhlciBzZXQgYSB3cmFwcGVyIG9yIHRhcmdldFxyXG4vLyBSZWFjdCBUb29sYm94IGRhdGEgYXR0cmlidXRlcyB0byBib29zdFxyXG4uYXBwYmFyIHtcclxuICA+IC50aXRsZSB7XHJcbiAgICBmb250LXNpemU6ICR0aXRsZS1mb250LXNpemU7XHJcbiAgICBmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LWJvbGQ7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICA+IHNtYWxsIHtcclxuICAgICAgZm9udC1zaXplOiAxLjggKiAkdW5pdDsgLy9UaGlzIGlzIHRoZSBzYW1lIGFzIHRpdGxlLWZvbnQtc2l6ZSwgc28gZG9uJ3QgZXhwZWN0IGl0IHRvIGJlIHNtYWxsZXJcclxuICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gID4gLmJ1dHRvbiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6ICRhcHBiYXItaGVpZ2h0IC0gKCRidXR0b24tZmxvYXRpbmctaGVpZ2h0IC8gMik7XHJcbiAgICByaWdodDogJGJ1dHRvbi1mbG9hdGluZy1oZWlnaHQgLyAyO1xyXG4gICAgei1pbmRleDogJHotaW5kZXgtaGlnaGVyO1xyXG4gIH1cclxufVxyXG5cclxuLy8gVElQOiBCZXN0IHRvIHNlcGFyYXRlIHRoZSB0aGUgY29udGVudCBhbmQgQXBwIEJhciBpbnRvIHNlcGFyYXRlIGNvbXBvbmVudHNcclxuLmNvbnRlbnQge1xyXG4gIHBhZGRpbmc6ICR1bml0O1xyXG59XHJcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHdlYnBhY2s6Ly8vanMvanMvY29tcG9uZW50cy9zdHlsZS5zY3NzXG4gKiovIiwiLy8tLSBDb2xvciBjb25maWd1cmF0aW9uXG4kY29sb3ItZGl2aWRlcjogJHBhbGV0dGUtZ3JleS0yMDAgIWRlZmF1bHQ7XG4kY29sb3ItYmFja2dyb3VuZDogJGNvbG9yLXdoaXRlICFkZWZhdWx0O1xuJGNvbG9yLXRleHQ6ICRwYWxldHRlLWdyZXktOTAwICFkZWZhdWx0O1xuJGNvbG9yLXRleHQtc2Vjb25kYXJ5OiAkcGFsZXR0ZS1ncmV5LTYwMCAhZGVmYXVsdDtcblxuJGNvbG9yLXByaW1hcnk6ICRwYWxldHRlLWluZGlnby01MDAgIWRlZmF1bHQ7XG4kY29sb3ItcHJpbWFyeS1kYXJrOiAkcGFsZXR0ZS1pbmRpZ28tNzAwICFkZWZhdWx0O1xuJGNvbG9yLWFjY2VudDogJHBhbGV0dGUtcGluay1hMjAwICFkZWZhdWx0O1xuJGNvbG9yLWFjY2VudC1kYXJrOiAkcGFsZXR0ZS1waW5rLTcwMCAhZGVmYXVsdDtcbiRjb2xvci1wcmltYXJ5LWNvbnRyYXN0OiAkY29sb3ItZGFyay1jb250cmFzdCAhZGVmYXVsdDtcbiRjb2xvci1hY2NlbnQtY29udHJhc3Q6ICRjb2xvci1kYXJrLWNvbnRyYXN0ICFkZWZhdWx0O1xuXG4vLy0tIFNpemluZ1xuJHVuaXQ6IDFyZW0gIWRlZmF1bHQ7XG5cbi8vIC0tIEZvbnRzXG4kcHJlZmVycmVkLWZvbnQ6IFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhXCIsIFwiQXJpYWxcIiwgc2Fucy1zZXJpZiAhZGVmYXVsdDtcbiRmb250LXNpemU6IDEuNiAqICR1bml0ICFkZWZhdWx0O1xuJGZvbnQtc2l6ZS10aW55OiAxLjIgKiAkdW5pdCAhZGVmYXVsdDtcbiRmb250LXNpemUtc21hbGw6IDEuNCAqICR1bml0ICFkZWZhdWx0O1xuJGZvbnQtc2l6ZS1ub3JtYWw6ICRmb250LXNpemUgIWRlZmF1bHQ7XG4kZm9udC1zaXplLWJpZzogMS44ICogJHVuaXQgIWRlZmF1bHQ7XG4kZm9udC13ZWlnaHQtdGhpbjogMzAwICFkZWZhdWx0O1xuJGZvbnQtd2VpZ2h0LW5vcm1hbDogNDAwICFkZWZhdWx0O1xuJGZvbnQtd2VpZ2h0LXNlbWktYm9sZDogNTAwICFkZWZhdWx0O1xuJGZvbnQtd2VpZ2h0LWJvbGQ6IDcwMCAhZGVmYXVsdDtcblxuLy8tLSBTaGFkb3dzXG4kc2hhZG93LWtleS11bWJyYS1vcGFjaXR5OiAwLjIgIWRlZmF1bHQ7XG4kc2hhZG93LWtleS1wZW51bWJyYS1vcGFjaXR5OiAwLjE0ICFkZWZhdWx0O1xuJHNoYWRvdy1hbWJpZW50LXNoYWRvdy1vcGFjaXR5OiAwLjEyICFkZWZhdWx0O1xuXG4vLy0tIERlcHRoIFNoYWRvd3NcbiR6ZGVwdGgtc2hhZG93LTE6IDAgMXB4IDZweCByZ2JhKDAsMCwwLC4xMiksIDAgMXB4IDRweCByZ2JhKDAsMCwwLC4yNCk7XG4kemRlcHRoLXNoYWRvdy0yOiAwIDNweCAxMHB4IHJnYmEoMCwwLDAsLjE2KSwgMCAzcHggMTBweCByZ2JhKDAsMCwwLC4yMyk7XG4kemRlcHRoLXNoYWRvdy0zOiAwIDEwcHggMzBweCByZ2JhKDAsMCwwLC4xOSksIDAgNnB4IDEwcHggcmdiYSgwLDAsMCwuMjMpO1xuJHpkZXB0aC1zaGFkb3ctNDogMCAxNHB4IDQ1cHggcmdiYSgwLDAsMCwuMjUpLCAwIDEwcHggMThweCByZ2JhKDAsMCwwLC4yMik7XG4kemRlcHRoLXNoYWRvdy01OiAwIDE5cHggNjBweCByZ2JhKDAsMCwwLC4zKSwgMCAxNXB4IDIwcHggcmdiYSgwLDAsMCwuMjIpO1xuXG4vLy0tIEFuaW1hdGlvblxuJGFuaW1hdGlvbi1kdXJhdGlvbjogLjM1cztcbiRhbmltYXRpb24tZGVsYXk6ICRhbmltYXRpb24tZHVyYXRpb24gLyA1O1xuJGFuaW1hdGlvbi1jdXJ2ZS1mYXN0LW91dC1zbG93LWluOiBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpICFkZWZhdWx0O1xuJGFuaW1hdGlvbi1jdXJ2ZS1saW5lYXItb3V0LXNsb3ctaW46IGN1YmljLWJlemllcigwLCAwLCAwLjIsIDEpICFkZWZhdWx0O1xuJGFuaW1hdGlvbi1jdXJ2ZS1mYXN0LW91dC1saW5lYXItaW46IGN1YmljLWJlemllcigwLjQsIDAsIDEsIDEpICFkZWZhdWx0O1xuJGFuaW1hdGlvbi1jdXJ2ZS1kZWZhdWx0OiAkYW5pbWF0aW9uLWN1cnZlLWZhc3Qtb3V0LXNsb3ctaW4gIWRlZmF1bHQ7XG5cbi8vLS0gSW5kZXhlc1xuJHotaW5kZXgtaGlnaGVzdDogMzAwICFkZWZhdWx0O1xuJHotaW5kZXgtaGlnaGVyOiAyMDAgIWRlZmF1bHQ7XG4kei1pbmRleC1oaWdoOiAxMDAgIWRlZmF1bHQ7XG4kei1pbmRleC1ub3JtYWw6IDEgIWRlZmF1bHQ7XG4kei1pbmRleC1sb3c6IC0xMDAgIWRlZmF1bHQ7XG4kei1pbmRleC1sb3dlcjogLTIwMCAhZGVmYXVsdDtcblxuLy8tLSBCcmVha3BvaW50c1xuLy8gaGVpZ2h0IG9mIGFwcCBiYXJcbi8vIGh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vZGVzaWduL3NwZWMvbGF5b3V0L21ldHJpY3Mta2V5bGluZXMuaHRtbCNtZXRyaWNzLWtleWxpbmVzLWtleWxpbmVzLXNwYWNpbmdcbiRzdGFuZGFyZC1pbmNyZW1lbnQtbW9iaWxlOiAoNS42ICogJHVuaXQpICFkZWZhdWx0O1xuJHN0YW5kYXJkLWluY3JlbWVudC1kZXNrdG9wOiAoNi40ICogJHVuaXQpICFkZWZhdWx0O1xuXG4vLyBodHRwczovL3d3dy5nb29nbGUuY29tL2Rlc2lnbi9zcGVjL2xheW91dC9tZXRyaWNzLWtleWxpbmVzLmh0bWwjbWV0cmljcy1rZXlsaW5lcy1iYXNlbGluZS1ncmlkc1xuJGJhc2VsaW5lLWdyaWQ6ICgwLjggKiAkdW5pdCkgIWRlZmF1bHQ7XG4kbGF5b3V0LWd1dHRlci13aWR0aC1zbTogKCRiYXNlbGluZS1ncmlkICogMikgIWRlZmF1bHQ7XG4kbGF5b3V0LWd1dHRlci13aWR0aDogKCRiYXNlbGluZS1ncmlkICogMykgIWRlZmF1bHQ7XG5cbi8vIGh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vZGVzaWduL3NwZWMvbGF5b3V0L3Jlc3BvbnNpdmUtdWkuaHRtbCNyZXNwb25zaXZlLXVpLWJyZWFrcG9pbnRzXG4vLyA0IGNvbHVtbnNcbiRsYXlvdXQtYnJlYWtwb2ludC14eHM6IDQ4MHB4ICFkZWZhdWx0O1xuLy8gOCBjb2x1bW5zXG4kbGF5b3V0LWJyZWFrcG9pbnQteHM6IDYwMHB4ICFkZWZhdWx0O1xuLy8gMTIgY29sdW1uc1xuJGxheW91dC1icmVha3BvaW50LXNtLXRhYmxldDogNzIwcHggIWRlZmF1bHQ7XG4kbGF5b3V0LWJyZWFrcG9pbnQtc206IDg0MHB4ICFkZWZhdWx0O1xuJGxheW91dC1icmVha3BvaW50LW1kOiA5NjBweCAhZGVmYXVsdDtcbiRsYXlvdXQtYnJlYWtwb2ludC1sZy10YWJsZXQ6IDEwMjRweCAhZGVmYXVsdDtcbiRsYXlvdXQtYnJlYWtwb2ludC1sZzogMTI4MHB4ICFkZWZhdWx0O1xuJGxheW91dC1icmVha3BvaW50LXhsOiAxNDQwcHggIWRlZmF1bHQ7XG4kbGF5b3V0LWJyZWFrcG9pbnQteHhsOiAxNjAwcHggIWRlZmF1bHQ7XG4kbGF5b3V0LWJyZWFrcG9pbnQteHh4bDogMTkyMHB4ICFkZWZhdWx0O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogd2VicGFjazovLy9qcy9+L3JlYWN0LXRvb2xib3gvbGliL19nbG9iYWxzLnNjc3NcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9*/